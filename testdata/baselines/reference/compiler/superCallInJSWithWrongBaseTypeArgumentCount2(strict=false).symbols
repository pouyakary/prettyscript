//// [tests/cases/compiler/superCallInJSWithWrongBaseTypeArgumentCount2.ts] ////

=== a.ts ===
export class A<T> {}
>A : Symbol(A, Decl(a.ts, 0, 0))
>T : Symbol(T, Decl(a.ts, 0, 15))

=== b.js ===
import { A } from './a.js';
>A : Symbol(A, Decl(b.js, 0, 8))

/** @extends {A} */
export class B1 extends A {
>B1 : Symbol(B1, Decl(b.js, 0, 27))
>A : Symbol(A, Decl(b.js, 0, 8))

    constructor() {
        super();
>super : Symbol(A, Decl(a.ts, 0, 0))
    }
}

/** @extends {A<string>} */
export class B2 extends A {
>B2 : Symbol(B2, Decl(b.js, 7, 1))
>A : Symbol(A, Decl(b.js, 0, 8))

    constructor() {
        super();
>super : Symbol(A, Decl(a.ts, 0, 0))
    }
}

/** @extends {A<string, string>} */
export class B3 extends A {
>B3 : Symbol(B3, Decl(b.js, 14, 1))
>A : Symbol(A, Decl(b.js, 0, 8))

    constructor() {
        super();
>super : Symbol(A, Decl(a.ts, 0, 0))
    }
}
