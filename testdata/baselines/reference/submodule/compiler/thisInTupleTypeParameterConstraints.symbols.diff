--- old.thisInTupleTypeParameterConstraints.symbols
+++ new.thisInTupleTypeParameterConstraints.symbols
@@= skipped -3, +3 lines =@@
 /// <reference no-default-lib="true"/>

 interface Boolean {}
->Boolean : Symbol(Boolean, Decl(thisInTupleTypeParameterConstraints.ts, 0, 0))
+>Boolean : Symbol(Boolean, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 0, 0))

 interface IArguments {}
->IArguments : Symbol(IArguments, Decl(thisInTupleTypeParameterConstraints.ts, 2, 20))
+>IArguments : Symbol(IArguments, Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 2, 20))

 interface Function {}
->Function : Symbol(Function, Decl(thisInTupleTypeParameterConstraints.ts, 3, 23))
+>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 3, 23))

 interface Number {}
->Number : Symbol(Number, Decl(thisInTupleTypeParameterConstraints.ts, 4, 21))
+>Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 4, 21))

 interface RegExp {}
->RegExp : Symbol(RegExp, Decl(thisInTupleTypeParameterConstraints.ts, 5, 19))
+>RegExp : Symbol(RegExp, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 5, 19))

 interface Object {}
->Object : Symbol(Object, Decl(thisInTupleTypeParameterConstraints.ts, 6, 19))
+>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 6, 19))

 interface String {}
->String : Symbol(String, Decl(thisInTupleTypeParameterConstraints.ts, 7, 19))
+>String : Symbol(String, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 7, 19))

 interface Array<T> {
->Array : Symbol(Array, Decl(thisInTupleTypeParameterConstraints.ts, 8, 19))
->T : Symbol(T, Decl(thisInTupleTypeParameterConstraints.ts, 10, 16))
+>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 8, 19))
+>T : Symbol(T, Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 10, 16))

     // 4 methods will run out of memory if this-types are not instantiated
     // correctly for tuple types that are type parameter constraints
     map<U>(arg: this): void;
->map : Symbol(Array.map, Decl(thisInTupleTypeParameterConstraints.ts, 10, 20))
+>map : Symbol(Array.map, Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 10, 20))
 >U : Symbol(U, Decl(thisInTupleTypeParameterConstraints.ts, 13, 8))
 >arg : Symbol(arg, Decl(thisInTupleTypeParameterConstraints.ts, 13, 11))

     reduceRight<U>(arg: this): void;
->reduceRight : Symbol(Array.reduceRight, Decl(thisInTupleTypeParameterConstraints.ts, 13, 28))
+>reduceRight : Symbol(Array.reduceRight, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 13, 28))
 >U : Symbol(U, Decl(thisInTupleTypeParameterConstraints.ts, 14, 16))
 >arg : Symbol(arg, Decl(thisInTupleTypeParameterConstraints.ts, 14, 19))

     reduce<U>(arg: this): void;
->reduce : Symbol(Array.reduce, Decl(thisInTupleTypeParameterConstraints.ts, 14, 36))
+>reduce : Symbol(Array.reduce, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(thisInTupleTypeParameterConstraints.ts, 14, 36))
 >U : Symbol(U, Decl(thisInTupleTypeParameterConstraints.ts, 15, 11))
 >arg : Symbol(arg, Decl(thisInTupleTypeParameterConstraints.ts, 15, 14))
