--- old.contextualTypingOfOptionalMembers.types
+++ new.contextualTypingOfOptionalMembers.types
@@= skipped -173, +173 lines =@@
 }

 declare function App4<State, Actions extends ActionsObjectOr<State>>(props: Options<State, Actions>["actions"] & { state: State }): JSX.Element;
->App4 : <State, Actions extends ActionsObjectOr<State>>(props: Options<State, Actions>["actions"] & { state: State; }) => JSX.Element
+>App4 : <State, Actions extends ActionsObjectOr<State>>(props: (string | Actions) & { state: State; }) => JSX.Element
 >props : (string | Actions) & { state: State; }
 >state : State
 >JSX : any
@@= skipped -8, +8 lines =@@
 const a = <App4 state={100} foo={s => s} />; // TODO: should be number => number, but JSX resolution is missing an inferential pass
 >a : JSX.Element
 ><App4 state={100} foo={s => s} /> : JSX.Element
->App4 : <State, Actions extends ActionsObjectOr<State>>(props: Options<State, Actions>["actions"] & { state: State; }) => JSX.Element
+>App4 : <State, Actions extends ActionsObjectOr<State>>(props: (string | Actions) & { state: State; }) => JSX.Element
 >state : number
 >100 : 100
 >foo : (s: number) => number