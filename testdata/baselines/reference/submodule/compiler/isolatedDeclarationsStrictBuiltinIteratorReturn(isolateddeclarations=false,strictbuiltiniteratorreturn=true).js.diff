--- old.isolatedDeclarationsStrictBuiltinIteratorReturn(isolateddeclarations=false,strictbuiltiniteratorreturn=true).js
+++ new.isolatedDeclarationsStrictBuiltinIteratorReturn(isolateddeclarations=false,strictbuiltiniteratorreturn=true).js
@@= skipped -95, +95 lines =@@
 declare function f13(): IterableIterator<number, BuiltinIteratorReturn>;
 declare function f14(): IterableIterator<number, BuiltinIteratorReturn, any>;
 declare const a1: () => Iterable<number>;
-declare const a2: () => Iterable<number, any>;
-declare const a3: () => Iterable<number, any, any>;
+declare const a2: () => Iterable<number>;
+declare const a3: () => Iterable<number>;
 declare const a4: () => Iterable<number, undefined>;
-declare const a5: () => Iterable<number, undefined, any>;
-declare const a6: () => Iterable<number, BuiltinIteratorReturn>;
-declare const a7: () => Iterable<number, BuiltinIteratorReturn, any>;
+declare const a5: () => Iterable<number, undefined>;
+declare const a6: () => Iterable<number, undefined>;
+declare const a7: () => Iterable<number, undefined>;
 declare const a8: () => IterableIterator<number>;
-declare const a9: () => IterableIterator<number, any>;
-declare const a10: () => IterableIterator<number, any, any>;
+declare const a9: () => IterableIterator<number>;
+declare const a10: () => IterableIterator<number>;
 declare const a11: () => IterableIterator<number, undefined>;
-declare const a12: () => IterableIterator<number, undefined, any>;
-declare const a13: () => IterableIterator<number, BuiltinIteratorReturn>;
-declare const a14: () => IterableIterator<number, BuiltinIteratorReturn, any>;
+declare const a12: () => IterableIterator<number, undefined>;
+declare const a13: () => IterableIterator<number, undefined>;
+declare const a14: () => IterableIterator<number, undefined>;