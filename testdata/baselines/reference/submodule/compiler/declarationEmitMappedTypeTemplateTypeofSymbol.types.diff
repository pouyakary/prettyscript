--- old.declarationEmitMappedTypeTemplateTypeofSymbol.types
+++ new.declarationEmitMappedTypeTemplateTypeofSymbol.types
@@= skipped -13, +13 lines =@@
 };

 export declare function now(): typeof Timestamp;
->now : () => typeof Timestamp
+>now : () => { [timestampSymbol]: true; }
 >Timestamp : { [timestampSymbol]: true; }

 === b.ts ===
@@= skipped -10, +10 lines =@@
 export const timestamp = x.now();
 >timestamp : { [x.timestampSymbol]: true; }
 >x.now() : { [x.timestampSymbol]: true; }
->x.now : () => typeof x.Timestamp
+>x.now : () => { [x.timestampSymbol]: true; }
 >x : typeof x
->now : () => typeof x.Timestamp
+>now : () => { [x.timestampSymbol]: true; }

 === c.ts ===
 import { now } from "./a";
->now : () => typeof import("a").Timestamp
+>now : () => { [timestampSymbol]: true; }

 export const timestamp = now();
 >timestamp : { [timestampSymbol]: true; }
 >now() : { [timestampSymbol]: true; }
->now : () => typeof import("a").Timestamp
+>now : () => { [timestampSymbol]: true; }
