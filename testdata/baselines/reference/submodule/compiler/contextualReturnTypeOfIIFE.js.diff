--- old.contextualReturnTypeOfIIFE.js
+++ new.contextualReturnTypeOfIIFE.js
@@= skipped -14, +14 lines =@@


 //// [contextualReturnTypeOfIIFE.js]
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
-const test1 = (() => __awaiter(this, void 0, void 0, function* () {
+const test1 = (async () => {
     return [1, 'two'];
-}))();
+})();
 const test2 = new Promise((resolve) => resolve([1, 'two']));
 const obj = {
     foo: (() => [1, 'two'])()