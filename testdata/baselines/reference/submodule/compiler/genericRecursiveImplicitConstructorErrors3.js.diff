--- old.genericRecursiveImplicitConstructorErrors3.js
+++ new.genericRecursiveImplicitConstructorErrors3.js
@@= skipped -42, +42 lines =@@
 })(TypeScript || (TypeScript = {}));
 (function (TypeScript) {
     class PullSymbol {
-        constructor() {
-            this.type = null;
-        }
+        type = null;
     }
     TypeScript.PullSymbol = PullSymbol;
     class PullTypeSymbol extends PullSymbol {
-        constructor() {
-            super(...arguments);
-            this._elementType = null;
-        }
+        _elementType = null;
         toString(scopeSymbol, useConstraintInName) {
             var s = this.getScopedNameEx(scopeSymbol, useConstraintInName).toString();
             return s;
@@= skipped -20, +15 lines =@@
                     (this._elementType.isArray() || this._elementType.isNamedTypeSymbol() ?
                         this._elementType.getScopedNameEx(scopeSymbol, false, getPrettyTypeName, getTypeParamMarkerInfo) :
                         this._elementType.getMemberTypeNameEx(false, scopeSymbol, getPrettyTypeName)) : 1;
-                return TypeScript.MemberName.create(elementMemberName, "", "[]");
+                return MemberName.create(elementMemberName, "", "[]");
             }
         }
     }