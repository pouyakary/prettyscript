--- old.privacyFunctionCannotNameParameterTypeDeclFile.js
+++ new.privacyFunctionCannotNameParameterTypeDeclFile.js
@@= skipped -160, +160 lines =@@
 exports.SpecializedWidget = exports.Widget1 = void 0;
 exports.createWidget1 = createWidget1;
 class Widget1 {
-    constructor() {
-        this.name = 'one';
-    }
+    name = 'one';
 }
 exports.Widget1 = Widget1;
 function createWidget1() {
@@= skipped -11, +9 lines =@@
 var SpecializedWidget;
 (function (SpecializedWidget) {
     class Widget2 {
-        constructor() {
-            this.name = 'one';
-        }
+        name = 'one';
     }
     SpecializedWidget.Widget2 = Widget2;
     function createWidget2() {
@@= skipped -18, +16 lines =@@
 exports.createExportedWidget3 = createExportedWidget3;
 exports.createExportedWidget4 = createExportedWidget4;
 ///<reference path='privacyFunctionCannotNameParameterTypeDeclFile_GlobalWidgets.ts'/>
-var Widgets = require("./privacyFunctionCannotNameParameterTypeDeclFile_Widgets");
-var Widgets1 = require("GlobalWidgets");
+const Widgets = require("./privacyFunctionCannotNameParameterTypeDeclFile_Widgets");
+const Widgets1 = require("GlobalWidgets");
 function createExportedWidget1() {
     return Widgets.createWidget1();
 }
@@= skipped -22, +22 lines =@@
 exports.publicFunctionWithPrivateParmeterTypes1 = publicFunctionWithPrivateParmeterTypes1;
 exports.publicFunctionWithPrivateModuleParameterTypes = publicFunctionWithPrivateModuleParameterTypes;
 exports.publicFunctionWithPrivateModuleParameterTypes1 = publicFunctionWithPrivateModuleParameterTypes1;
-var exporter = require("./privacyFunctionCannotNameParameterTypeDeclFile_exporter");
+const exporter = require("./privacyFunctionCannotNameParameterTypeDeclFile_exporter");
 class publicClassWithWithPrivateParmeterTypes {
+    param1;
+    param2;
     static myPublicStaticMethod(param = exporter.createExportedWidget1()) {
     }
     static myPrivateStaticMethod(param = exporter.createExportedWidget1()) {
@@= skipped -17, +19 lines =@@
 }
 exports.publicClassWithWithPrivateParmeterTypes = publicClassWithWithPrivateParmeterTypes;
 class publicClassWithWithPrivateParmeterTypes1 {
+    param1;
+    param2;
     static myPublicStaticMethod(param = exporter.createExportedWidget3()) {
     }
     static myPrivateStaticMethod(param = exporter.createExportedWidget3()) {
@@= skipped -15, +17 lines =@@
 }
 exports.publicClassWithWithPrivateParmeterTypes1 = publicClassWithWithPrivateParmeterTypes1;
 class privateClassWithWithPrivateParmeterTypes {
+    param1;
+    param2;
     static myPublicStaticMethod(param = exporter.createExportedWidget1()) {
     }
     static myPrivateStaticMethod(param = exporter.createExportedWidget1()) {
@@= skipped -14, +16 lines =@@
     }
 }
 class privateClassWithWithPrivateParmeterTypes2 {
+    param1;
+    param2;
     static myPublicStaticMethod(param = exporter.createExportedWidget3()) {
     }
     static myPrivateStaticMethod(param = exporter.createExportedWidget3()) {
@@= skipped -22, +24 lines =@@
 function privateFunctionWithPrivateParmeterTypes1(param = exporter.createExportedWidget3()) {
 }
 class publicClassWithPrivateModuleParameterTypes {
+    param1;
+    param2;
     static myPublicStaticMethod(param = exporter.createExportedWidget2()) {
     }
     myPublicMethod(param = exporter.createExportedWidget2()) {
@@= skipped -11, +13 lines =@@
 }
 exports.publicClassWithPrivateModuleParameterTypes = publicClassWithPrivateModuleParameterTypes;
 class publicClassWithPrivateModuleParameterTypes2 {
+    param1;
+    param2;
     static myPublicStaticMethod(param = exporter.createExportedWidget4()) {
     }
     myPublicMethod(param = exporter.createExportedWidget4()) {
@@= skipped -15, +17 lines =@@
 function publicFunctionWithPrivateModuleParameterTypes1(param = exporter.createExportedWidget4()) {
 }
 class privateClassWithPrivateModuleParameterTypes {
+    param1;
+    param2;
     static myPublicStaticMethod(param = exporter.createExportedWidget2()) {
     }
     myPublicMethod(param = exporter.createExportedWidget2()) {
@@= skipped -10, +12 lines =@@
     }
 }
 class privateClassWithPrivateModuleParameterTypes1 {
+    param1;
+    param2;
     static myPublicStaticMethod(param = exporter.createExportedWidget4()) {
     }
     myPublicMethod(param = exporter.createExportedWidget4()) {