--- old.assignmentToConditionalBrandedStringTemplateOrMapping.types
+++ new.assignmentToConditionalBrandedStringTemplateOrMapping.types
@@= skipped -16, +16 lines =@@
 >b : <T>() => T extends `${"a" & { a: 1; }}` ? 1 : 2

 let c: (<T>() => T extends Uppercase<'a' & { a: 1 }> ? 1 : 2) = null!;
->c : <T>() => T extends Uppercase<"a" & { a: 1; }> ? 1 : 2
+>c : <T>() => T extends Uppercase<`${"a" & { a: 1; }}`> ? 1 : 2
 >a : 1
 >null! : null

 let d: (<T>() => T extends Uppercase<'a' & { a: 1 }> ? 1 : 2) = null!;
->d : <T>() => T extends Uppercase<"a" & { a: 1; }> ? 1 : 2
+>d : <T>() => T extends Uppercase<`${"a" & { a: 1; }}`> ? 1 : 2
 >a : 1
 >null! : null

 c = d;
->c = d : <T>() => T extends Uppercase<"a" & { a: 1; }> ? 1 : 2
->c : <T>() => T extends Uppercase<"a" & { a: 1; }> ? 1 : 2
->d : <T>() => T extends Uppercase<"a" & { a: 1; }> ? 1 : 2
+>c = d : <T>() => T extends Uppercase<`${"a" & { a: 1; }}`> ? 1 : 2
+>c : <T>() => T extends Uppercase<`${"a" & { a: 1; }}`> ? 1 : 2
+>d : <T>() => T extends Uppercase<`${"a" & { a: 1; }}`> ? 1 : 2
