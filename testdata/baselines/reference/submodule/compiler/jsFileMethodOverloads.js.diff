--- old.jsFileMethodOverloads.js
+++ new.jsFileMethodOverloads.js
@@= skipped -104, +104 lines =@@
      * @param {T} value
      */
     constructor(value: T);
-    value: T;
-    /**
-     * @overload
-     * @param {Example<number>} this
-     * @returns {'number'}
-     */
-    getTypeName(this: Example<number>): "number";
-    /**
-     * @overload
-     * @param {Example<string>} this
-     * @returns {'string'}
-     */
-    getTypeName(this: Example<string>): "string";
+    /**
+     * @overload
+     * @param {Example<number>} this
+     * @returns {'number'}
+     */
+    /**
+     * @overload
+     * @param {Example<string>} this
+     * @returns {'string'}
+     */
+    /**
+     * @returns {string}
+     */
+    getTypeName(this: Example<number>): 'number';
+    /**
+     * @overload
+     * @param {Example<number>} this
+     * @returns {'number'}
+     */
+    /**
+     * @overload
+     * @param {Example<string>} this
+     * @returns {'string'}
+     */
+    /**
+     * @returns {string}
+     */
+    getTypeName(this: Example<string>): 'string';
     /**
      * @template U
      * @overload
      * @param {(y: T) => U} fn
      * @returns {U}
+     */
+    /**
+     * @overload
+     * @returns {T}
+     */
+    /**
+     * @param {(y: T) => unknown} [fn]
+     * @returns {unknown}
      */
     transform<U>(fn: (y: T) => U): U;
     /**
+     * @template U
+     * @overload
+     * @param {(y: T) => U} fn
+     * @returns {U}
+     */
+    /**
      * @overload
      * @returns {T}
+     */
+    /**
+     * @param {(y: T) => unknown} [fn]
+     * @returns {unknown}
      */
     transform(): T;
 }