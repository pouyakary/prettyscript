--- old.declFileTypeofFunction.types
+++ new.declFileTypeofFunction.types
@@= skipped -1, +1 lines =@@

 === declFileTypeofFunction.ts ===
 function f(n: typeof f): string;
->f : { (n: typeof f): string; (n: typeof g): string; }
->n : { (n: typeof f): string; (n: typeof g): string; }
->f : { (n: typeof f): string; (n: typeof g): string; }
+>f : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }
+>n : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }
+>f : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }

 function f(n: typeof g): string;
->f : { (n: typeof f): string; (n: typeof g): string; }
->n : { (n: typeof g): number; (n: typeof f): number; }
->g : { (n: typeof g): number; (n: typeof f): number; }
+>f : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }
+>n : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }
+>g : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }

 function f() { return undefined; }
->f : { (n: typeof f): string; (n: typeof g): string; }
+>f : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }
 >undefined : undefined

 function g(n: typeof g): number;
->g : { (n: typeof g): number; (n: typeof f): number; }
->n : { (n: typeof g): number; (n: typeof f): number; }
->g : { (n: typeof g): number; (n: typeof f): number; }
+>g : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }
+>n : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }
+>g : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }

 function g(n: typeof f): number;
->g : { (n: typeof g): number; (n: typeof f): number; }
->n : { (n: typeof f): string; (n: typeof g): string; }
->f : { (n: typeof f): string; (n: typeof g): string; }
+>g : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }
+>n : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }
+>f : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }

 function g() { return undefined; }
->g : { (n: typeof g): number; (n: typeof f): number; }
+>g : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }
 >undefined : undefined

 var b: () => typeof b;
->b : () => typeof b
->b : () => typeof b
+>b : () => any
+>b : () => any

 function b1() {
 >b1 : () => typeof b1