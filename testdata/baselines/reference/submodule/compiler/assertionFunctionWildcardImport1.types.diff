--- old.assertionFunctionWildcardImport1.types
+++ new.assertionFunctionWildcardImport1.types
@@= skipped -17, +17 lines =@@
 >ts : typeof ts

 import { Debug } from "./_namespaces/ts";
->Debug : typeof ts.Debug
+>Debug : typeof Debug

 ts.Debug.assert(true);
 >ts.Debug.assert(true) : void
 >ts.Debug.assert : (expression: unknown) => asserts expression
->ts.Debug : typeof ts.Debug
+>ts.Debug : typeof Debug
 >ts : typeof ts
->Debug : typeof ts.Debug
+>Debug : typeof Debug
 >assert : (expression: unknown) => asserts expression
 >true : true

 Debug.assert(true);
 >Debug.assert(true) : void
 >Debug.assert : (expression: unknown) => asserts expression
->Debug : typeof ts.Debug
+>Debug : typeof Debug
 >assert : (expression: unknown) => asserts expression
 >true : true

@@= skipped -29, +29 lines =@@
 >ts : typeof ts

 import { Debug } from "./_namespaces/ts";
->Debug : typeof ts.Debug
+>Debug : typeof Debug

 ts.Debug.assert(true);
 >ts.Debug.assert(true) : void
 >ts.Debug.assert : (expression: unknown) => asserts expression
->ts.Debug : typeof ts.Debug
+>ts.Debug : typeof Debug
 >ts : typeof ts
->Debug : typeof ts.Debug
+>Debug : typeof Debug
 >assert : (expression: unknown) => asserts expression
 >true : true

 Debug.assert(true);
 >Debug.assert(true) : void
 >Debug.assert : (expression: unknown) => asserts expression
->Debug : typeof ts.Debug
+>Debug : typeof Debug
 >assert : (expression: unknown) => asserts expression
 >true : true
