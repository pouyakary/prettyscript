--- old.jsdocInTypeScript.js
+++ new.jsdocInTypeScript.js
@@= skipped -60, +60 lines =@@

 //// [jsdocInTypeScript.js]
 class T {
+    prop;
 }
 x.prop;
 // @param type has no effect.
@@= skipped -18, +19 lines =@@
 /** @template T */
 function tem(t) { return {}; }
 let i; // Should succeed thanks to type parameter default
-/** @typedef {string} N.Str */
-var M = N; // Error: @typedef does not create namespaces in TypeScript code.
 // Not legal JSDoc, but that shouldn't matter in TypeScript.
 /**
  * @type {{foo: (function(string, string): string)}}
@@= skipped -12, +10 lines =@@
 E[""];
 // make sure import types in JSDoc are not resolved
 /** @type {import("should-not-be-resolved").Type} */
-var v = Promise.resolve("".concat(String())).then(function (s) { return require(s); });
+var v = Promise.resolve(`${String()}`).then(s => require(s));