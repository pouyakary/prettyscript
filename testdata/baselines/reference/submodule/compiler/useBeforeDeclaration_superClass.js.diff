--- old.useBeforeDeclaration_superClass.js
+++ new.useBeforeDeclaration_superClass.js
@@= skipped -31, +31 lines =@@

 //// [useBeforeDeclaration_superClass.js]
 class C {
-    constructor() {
-        this.x = 0;
-    }
+    x = 0;
 }
 class D extends C {
-    constructor() {
-        super(...arguments);
-        // Not an error -- this will access the parent's initialized value for `x`, not the one on the child.
-        this.old_x = this.x;
-        this.x = 1;
-    }
+    // Not an error -- this will access the parent's initialized value for `x`, not the one on the child.
+    old_x = this.x;
+    x = 1;
 }
 // Test that it works on chains of classes
 class X {
-    constructor() {
-        this.x = 0;
-    }
+    x = 0;
 }
 class Y extends X {
 }
 class Z extends Y {
-    constructor() {
-        super(...arguments);
-        this.old_x = this.x;
-        this.x = 1;
-    }
+    old_x = this.x;
+    x = 1;
 }
 class J {
-    constructor() {
-        this.old_x = this.x;
-        this.x = 1;
-    }
+    old_x = this.x;
+    x = 1;
 }