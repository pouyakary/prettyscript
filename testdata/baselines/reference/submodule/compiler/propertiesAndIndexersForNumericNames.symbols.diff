--- old.propertiesAndIndexersForNumericNames.symbols
+++ new.propertiesAndIndexersForNumericNames.symbols
@@= skipped -15, +15 lines =@@
 >"-1" : Symbol(C["-1"], Decl(propertiesAndIndexersForNumericNames.ts, 5, 34))

     public "-2.5": string = "negative number"; // Error
->"-2.5" : Symbol(C["-2.5"], Decl(propertiesAndIndexersForNumericNames.ts, 6, 44))
+>"-2.5" : Symbol(C["-25"], Decl(propertiesAndIndexersForNumericNames.ts, 6, 44))

     public "3.141592": string = "pi-sitive number"; // Error
->"3.141592" : Symbol(C["3.141592"], Decl(propertiesAndIndexersForNumericNames.ts, 7, 46))
+>"3.141592" : Symbol(C["3141592"], Decl(propertiesAndIndexersForNumericNames.ts, 7, 46))

     public "1.2e-20": string = "really small number"; // Error
->"1.2e-20" : Symbol(C["1.2e-20"], Decl(propertiesAndIndexersForNumericNames.ts, 8, 51))
+>"1.2e-20" : Symbol(C["12e-20"], Decl(propertiesAndIndexersForNumericNames.ts, 8, 51))

     public "Infinity": string = "A gillion"; // Error
 >"Infinity" : Symbol(C["Infinity"], Decl(propertiesAndIndexersForNumericNames.ts, 9, 53))
@@= skipped -78, +78 lines =@@
 >"0b101101001010" : Symbol(C["0b101101001010"], Decl(propertiesAndIndexersForNumericNames.ts, 37, 47))

     public "0.000000000000000000012": string = "should've been in exponential form"; // No error
->"0.000000000000000000012" : Symbol(C["0.000000000000000000012"], Decl(propertiesAndIndexersForNumericNames.ts, 38, 56))
+>"0.000000000000000000012" : Symbol(C["0000000000000000000012"], Decl(propertiesAndIndexersForNumericNames.ts, 38, 56))
 }
