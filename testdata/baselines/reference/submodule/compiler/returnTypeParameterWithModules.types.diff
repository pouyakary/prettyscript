--- old.returnTypeParameterWithModules.types
+++ new.returnTypeParameterWithModules.types
@@= skipped -4, +4 lines =@@
 >M1 : typeof M1

     export function reduce<A>(ar, f, e?): Array<A> {
->reduce : <A>(ar: any, f: any, e?: any) => Array<A>
+>reduce : <A>(ar: any, f: any, e?: any) => A[]
 >ar : any
 >f : any
 >e : any
@@= skipped -37, +37 lines =@@

         A.reduce(arguments, compose2);
 >A.reduce(arguments, compose2) : unknown[]
->A.reduce : <A>(ar: any, f: any, e?: any) => Array<A>
+>A.reduce : <A>(ar: any, f: any, e?: any) => A[]
 >A : typeof A
->reduce : <A>(ar: any, f: any, e?: any) => Array<A>
+>reduce : <A>(ar: any, f: any, e?: any) => A[]
 >arguments : IArguments
 >compose2 : <B, C, D>(g: (x: B) => C, f: (x: D) => B) => (x: D) => C
