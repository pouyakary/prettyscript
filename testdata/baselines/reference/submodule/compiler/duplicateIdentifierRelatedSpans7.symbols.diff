--- old.duplicateIdentifierRelatedSpans7.symbols
+++ new.duplicateIdentifierRelatedSpans7.symbols
@@= skipped -3, +3 lines =@@
 /// <reference path="./file1" />

 declare module "someMod" {
->"someMod" : Symbol("someMod", Decl(file1.ts, 0, 0), Decl(file2.ts, 0, 0))
+>"someMod" : Symbol("someMod", Decl(file2.ts, 0, 0))

     export interface TopLevel {
->TopLevel : Symbol(TopLevel, Decl(file1.ts, 0, 26), Decl(file2.ts, 2, 26))
+>TopLevel : Symbol(TopLevel, Decl(file2.ts, 2, 26))

         duplicate1(): number;
 >duplicate1 : Symbol(TopLevel.duplicate1, Decl(file2.ts, 3, 31))
@@= skipped -35, +35 lines =@@
 }
 export {};

-=== file1.ts ===
-declare module "someMod" {
->"someMod" : Symbol("someMod", Decl(file1.ts, 0, 0), Decl(file2.ts, 0, 0))
-
-    export interface TopLevel {
->TopLevel : Symbol(TopLevel, Decl(file1.ts, 0, 26), Decl(file2.ts, 2, 26))
-
-        duplicate1: () => string;
->duplicate1 : Symbol(TopLevel.duplicate1, Decl(file1.ts, 1, 31))
-
-        duplicate2: () => string;
->duplicate2 : Symbol(TopLevel.duplicate2, Decl(file1.ts, 2, 33))
-
-        duplicate3: () => string;
->duplicate3 : Symbol(TopLevel.duplicate3, Decl(file1.ts, 3, 33))
-
-        duplicate4: () => string;
->duplicate4 : Symbol(TopLevel.duplicate4, Decl(file1.ts, 4, 33))
-
-        duplicate5: () => string;
->duplicate5 : Symbol(TopLevel.duplicate5, Decl(file1.ts, 5, 33))
-
-        duplicate6: () => string;
->duplicate6 : Symbol(TopLevel.duplicate6, Decl(file1.ts, 6, 33))
-
-        duplicate7: () => string;
->duplicate7 : Symbol(TopLevel.duplicate7, Decl(file1.ts, 7, 33))
-
-        duplicate8: () => string;
->duplicate8 : Symbol(TopLevel.duplicate8, Decl(file1.ts, 8, 33))
-
-        duplicate9: () => string;
->duplicate9 : Symbol(TopLevel.duplicate9, Decl(file1.ts, 9, 33))
-    }
-}