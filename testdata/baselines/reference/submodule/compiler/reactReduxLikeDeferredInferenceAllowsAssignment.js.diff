--- old.reactReduxLikeDeferredInferenceAllowsAssignment.js
+++ new.reactReduxLikeDeferredInferenceAllowsAssignment.js
@@= skipped -150, +150 lines =@@

 //// [reactReduxLikeDeferredInferenceAllowsAssignment.js]
 "use strict";
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 const simpleAction = (payload) => ({
     type: "SIMPLE_ACTION",
     payload
 });
-const thunkAction = (param1, param2) => (dispatch_1, _a) => __awaiter(void 0, [dispatch_1, _a], void 0, function* (dispatch, { foo }) {
+const thunkAction = (param1, param2) => async (dispatch, { foo }) => {
     return foo;
-});
+};
 class TestComponent extends Component {
 }
 const mapDispatchToProps = { simpleAction, thunkAction };