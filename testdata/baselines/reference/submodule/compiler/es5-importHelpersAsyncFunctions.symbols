//// [tests/cases/compiler/es5-importHelpersAsyncFunctions.ts] ////

=== external.ts ===
export async function foo() {
>foo : Symbol(foo, Decl(external.ts, 0, 0))
}

=== script.ts ===
async function foo() {
>foo : Symbol(foo, Decl(script.ts, 0, 0))
}

=== tslib.d.ts ===
export declare function __extends(d: Function, b: Function): void;
>__extends : Symbol(__extends, Decl(tslib.d.ts, 0, 0))
>d : Symbol(d, Decl(tslib.d.ts, 0, 34))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>b : Symbol(b, Decl(tslib.d.ts, 0, 46))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

export declare function __assign(t: any, ...sources: any[]): any;
>__assign : Symbol(__assign, Decl(tslib.d.ts, 0, 66))
>t : Symbol(t, Decl(tslib.d.ts, 1, 33))
>sources : Symbol(sources, Decl(tslib.d.ts, 1, 40))

export declare function __decorate(decorators: Function[], target: any, key?: string | symbol, desc?: any): any;
>__decorate : Symbol(__decorate, Decl(tslib.d.ts, 1, 65))
>decorators : Symbol(decorators, Decl(tslib.d.ts, 2, 35))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>target : Symbol(target, Decl(tslib.d.ts, 2, 58))
>key : Symbol(key, Decl(tslib.d.ts, 2, 71))
>desc : Symbol(desc, Decl(tslib.d.ts, 2, 94))

export declare function __param(paramIndex: number, decorator: Function): Function;
>__param : Symbol(__param, Decl(tslib.d.ts, 2, 112))
>paramIndex : Symbol(paramIndex, Decl(tslib.d.ts, 3, 32))
>decorator : Symbol(decorator, Decl(tslib.d.ts, 3, 51))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

export declare function __metadata(metadataKey: any, metadataValue: any): Function;
>__metadata : Symbol(__metadata, Decl(tslib.d.ts, 3, 83))
>metadataKey : Symbol(metadataKey, Decl(tslib.d.ts, 4, 35))
>metadataValue : Symbol(metadataValue, Decl(tslib.d.ts, 4, 52))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

export declare function __awaiter(thisArg: any, _arguments: any, P: Function, generator: Function): any;
>__awaiter : Symbol(__awaiter, Decl(tslib.d.ts, 4, 83))
>thisArg : Symbol(thisArg, Decl(tslib.d.ts, 5, 34))
>_arguments : Symbol(_arguments, Decl(tslib.d.ts, 5, 47))
>P : Symbol(P, Decl(tslib.d.ts, 5, 64))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>generator : Symbol(generator, Decl(tslib.d.ts, 5, 77))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

export declare function __generator(body: Function): any;
>__generator : Symbol(__generator, Decl(tslib.d.ts, 5, 104))
>body : Symbol(body, Decl(tslib.d.ts, 6, 36))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

