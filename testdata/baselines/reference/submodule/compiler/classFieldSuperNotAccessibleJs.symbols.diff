--- old.classFieldSuperNotAccessibleJs.symbols
+++ new.classFieldSuperNotAccessibleJs.symbols
@@= skipped -13, +13 lines =@@

         /** @type number */
         this.justProp;
->this.justProp : Symbol(YaddaBase.justProp, Decl(index.js, 4, 26))
 >this : Symbol(YaddaBase, Decl(index.js, 0, 0))
->justProp : Symbol(YaddaBase.justProp, Decl(index.js, 4, 26))

         /** @type string */
         this['literalElementAccess'];
 >this : Symbol(YaddaBase, Decl(index.js, 0, 0))
->'literalElementAccess' : Symbol(YaddaBase['literalElementAccess'], Decl(index.js, 6, 22))

         this.b()
 >this.b : Symbol(YaddaBase.b, Decl(index.js, 11, 5))
@@= skipped -48, +45 lines =@@
 >justPropTests : Symbol(DerivedYadda.justPropTests, Decl(index.js, 23, 5))

         return super.justProp;
->super.justProp : Symbol(YaddaBase.justProp, Decl(index.js, 4, 26))
 >super : Symbol(YaddaBase, Decl(index.js, 0, 0))
->justProp : Symbol(YaddaBase.justProp, Decl(index.js, 4, 26))
     }
     get literalElementAccessTests() {
 >literalElementAccessTests : Symbol(DerivedYadda.literalElementAccessTests, Decl(index.js, 26, 5))

         return super.literalElementAccess;
->super.literalElementAccess : Symbol(YaddaBase['literalElementAccess'], Decl(index.js, 6, 22))
 >super : Symbol(YaddaBase, Decl(index.js, 0, 0))
->literalElementAccess : Symbol(YaddaBase['literalElementAccess'], Decl(index.js, 6, 22))
     }
 }
