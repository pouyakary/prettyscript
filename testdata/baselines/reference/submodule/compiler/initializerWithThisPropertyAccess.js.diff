--- old.initializerWithThisPropertyAccess.js
+++ new.initializerWithThisPropertyAccess.js
@@= skipped -35, +35 lines =@@


 //// [initializerWithThisPropertyAccess.js]
-"use strict";
 class A {
+    a;
+    b = this.a; // Error
+    c = () => this.a;
+    d = (new A()).a;
     constructor() {
-        this.b = this.a; // Error
-        this.c = () => this.a;
-        this.d = (new A()).a;
         this.a = 1;
     }
 }
 class B extends A {
-    constructor() {
-        super(...arguments);
-        this.x = this.a;
-    }
+    x = this.a;
 }
 class C {
-    constructor() {
-        this.b = this.a;
-    }
+    a;
+    b = this.a;
 }
 // Repro from #37979
 class Foo {
+    bar;
+    barProp = this.bar.prop;
     constructor() {
-        this.barProp = this.bar.prop;
         this.bar = new Bar();
     }
 }
 class Bar {
-    constructor() {
-        this.prop = false;
-    }
+    prop = false;
 }


@@= skipped -51, +46 lines =@@
 }
 declare class Foo {
     private bar;
-    readonly barProp = false;
+    readonly barProp: boolean;
     constructor();
 }
 declare class Bar {
-    readonly prop = false;
+    readonly prop: boolean;
 }