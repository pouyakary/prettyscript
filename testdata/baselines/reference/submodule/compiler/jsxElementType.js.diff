--- old.jsxElementType.js
+++ new.jsxElementType.js
@@= skipped -115, +115 lines =@@

 //// [jsxElementType.js]
 "use strict";
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 /// <reference path="react16.d.ts" />
-var React = require("react");
+const React = require("react");
 let Component;
 const RenderElement = ({ title }) => React.createElement("div", null, title);
 Component = RenderElement;
@@= skipped -34, +25 lines =@@
 React.createElement(RenderArray, { title: "react" });
 React.createElement(RenderArray, { excessProp: true });
 // React Server Component
-const RenderPromise = (_a) => __awaiter(void 0, [_a], void 0, function* ({ title }) { return "react"; });
+const RenderPromise = async ({ title }) => "react";
 Component = RenderPromise;
 React.createElement(RenderPromise, null);
 React.createElement(RenderPromise, { title: "react" });