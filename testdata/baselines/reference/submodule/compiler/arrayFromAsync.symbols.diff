--- old.arrayFromAsync.symbols
+++ new.arrayFromAsync.symbols
@@= skipped -118, +118 lines =@@
 >asyncGen : Symbol(asyncGen, Decl(arrayFromAsync.ts, 0, 11))

 function Data (n) {}
->Data : Symbol(Data, Decl(arrayFromAsync.ts, 28, 52), Decl(arrayFromAsync.ts, 30, 20))
+>Data : Symbol(Data, Decl(arrayFromAsync.ts, 28, 52))
 >n : Symbol(n, Decl(arrayFromAsync.ts, 30, 15))

 Data.fromAsync = Array.fromAsync;
 >Data.fromAsync : Symbol(Data.fromAsync, Decl(arrayFromAsync.ts, 30, 20))
->Data : Symbol(Data, Decl(arrayFromAsync.ts, 28, 52), Decl(arrayFromAsync.ts, 30, 20))
+>Data : Symbol(Data, Decl(arrayFromAsync.ts, 28, 52))
 >fromAsync : Symbol(Data.fromAsync, Decl(arrayFromAsync.ts, 30, 20))
 >Array.fromAsync : Symbol(ArrayConstructor.fromAsync, Decl(lib.esnext.array.d.ts, --, --), Decl(lib.esnext.array.d.ts, --, --))
 >Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --) ... and 4 more)
@@= skipped -14, +14 lines =@@
 const sameArr5 = await Data.fromAsync(asyncGen(4));
 >sameArr5 : Symbol(sameArr5, Decl(arrayFromAsync.ts, 32, 5))
 >Data.fromAsync : Symbol(Data.fromAsync, Decl(arrayFromAsync.ts, 30, 20))
->Data : Symbol(Data, Decl(arrayFromAsync.ts, 28, 52), Decl(arrayFromAsync.ts, 30, 20))
+>Data : Symbol(Data, Decl(arrayFromAsync.ts, 28, 52))
 >fromAsync : Symbol(Data.fromAsync, Decl(arrayFromAsync.ts, 30, 20))
 >asyncGen : Symbol(asyncGen, Decl(arrayFromAsync.ts, 0, 11))
