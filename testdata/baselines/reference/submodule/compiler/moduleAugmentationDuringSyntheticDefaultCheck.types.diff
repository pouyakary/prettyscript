--- old.moduleAugmentationDuringSyntheticDefaultCheck.types
+++ new.moduleAugmentationDuringSyntheticDefaultCheck.types
@@= skipped -3, +3 lines =@@
 /// <reference path="./idx" />

 import moment = require("moment-timezone");
->moment : { default: () => moment.Moment; }
+>moment : () => moment.Moment

 === node_modules/moment/index.d.ts ===
 declare function moment(): moment.Moment;
->moment : () => moment.Moment
+>moment : () => import("node_modules/moment/index.d.ts").Moment
 >moment : any

 declare namespace moment {
@@= skipped -14, +14 lines =@@
   }
 }
 export = moment;
->moment : () => moment.Moment
+>moment : () => import("node_modules/moment/index.d.ts").Moment

 === node_modules/moment-timezone/index.d.ts ===
 import * as moment from 'moment';
->moment : { default: () => moment.Moment; }
+>moment : () => moment.Moment

 export = moment;
->moment : { default: () => moment.Moment; }
+>moment : () => moment.Moment

 declare module "moment" {
 >"moment" : () => Moment
@@= skipped -15, +15 lines =@@
     interface Moment {
         tz(): string;
 >tz : () => string
-    }
-}
-=== idx.ts ===
-import * as _moment from "moment";
->_moment : { default: () => _moment.Moment; }
-
-declare module "moment" {
->"moment" : () => Moment
-
-    interface Moment {
-        strftime(pattern: string): string;
->strftime : { (pattern: string): string; (pattern: string): string; }
->pattern : string
-    }
-}
-declare module "moment-timezone" {
->"moment-timezone" : { default: () => Moment; }
-
-    interface Moment {
-        strftime(pattern: string): string;
->strftime : { (pattern: string): string; (pattern: string): string; }
->pattern : string
     }
 }