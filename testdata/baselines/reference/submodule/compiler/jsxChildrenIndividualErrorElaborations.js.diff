--- old.jsxChildrenIndividualErrorElaborations.js
+++ new.jsxChildrenIndividualErrorElaborations.js
@@= skipped -84, +84 lines =@@
 exports.Blah2 = Blah2;
 exports.Blah3 = Blah3;
 /// <reference path="react16.d.ts" />
-var React = require("react");
+const React = require("react");
 function Blah(props) {
     return React.createElement(React.Fragment, null);
 }
@@= skipped -9, +9 lines =@@
 // Blah components don't accept text as child elements
 var a = React.createElement(Blah, null, "Hello unexpected text!");
 // Blah components don't accept multiple children.
-var a = React.createElement(Blah, null,
-    x => "" + x,
-    x => "" + x);
+var a = React.createElement(Blah, null, x => "" + x, x => "" + x);
 function Blah2(props) {
     return React.createElement(React.Fragment, null);
 }
@@= skipped -11, +9 lines =@@
 // Blah2 components don't accept text as child elements
 var a = React.createElement(Blah2, null, "Hello unexpected text!");
 // Blah2 components don't accept multiple children of the wrong type.
-var a = React.createElement(Blah2, null,
-    x => x,
-    x => x);
+var a = React.createElement(Blah2, null, x => x, x => x);
 function Blah3(props) {
     return React.createElement(React.Fragment, null);
 }
@@= skipped -11, +9 lines =@@
 // Blah3 components don't accept text as child elements
 var a = React.createElement(Blah3, null, "Hello unexpected text!");
 // Blah3 components don't accept multiple children of the wrong type.
-var a = React.createElement(Blah3, null,
-    x => x,
-    x => x);
+var a = React.createElement(Blah3, null, x => x, x => x);