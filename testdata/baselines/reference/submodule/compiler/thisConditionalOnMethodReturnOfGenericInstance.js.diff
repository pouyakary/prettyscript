--- old.thisConditionalOnMethodReturnOfGenericInstance.js
+++ new.thisConditionalOnMethodReturnOfGenericInstance.js
@@= skipped -20, +20 lines =@@


 //// [thisConditionalOnMethodReturnOfGenericInstance.js]
-"use strict";
 class A {
+    unmeasurableUsage;
 }
 class B extends A {
     method() {
@@= skipped -9, +9 lines =@@
     }
 }
 class C extends B {
+    marker;
 }
 const x = new C();
 const y = x.method(); // usage flags `method` in `B` as circular and marks `y` as the error-any type