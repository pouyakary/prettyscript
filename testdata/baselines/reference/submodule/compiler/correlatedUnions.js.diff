--- old.correlatedUnions.js
+++ new.correlatedUnions.js
@@= skipped -303, +303 lines =@@


 //// [correlatedUnions.js]
-"use strict";
-// Various repros from #30581
 function processRecord(rec) {
     rec.f(rec.v);
 }
@@= skipped -214, +212 lines =@@
 declare function createEventListener<K extends keyof DocumentEventMap>({ name, once, callback }: Ev<K>): Ev<K>;
 declare const clickEvent: {
     readonly name: "click";
-    readonly once?: boolean;
+    readonly once?: boolean | undefined;
     readonly callback: (ev: PointerEvent) => void;
 };
 declare const scrollEvent: {
     readonly name: "scroll";
-    readonly once?: boolean;
+    readonly once?: boolean | undefined;
     readonly callback: (ev: Event) => void;
 };
 declare function ff1(): void;
@@= skipped -74, +74 lines =@@
     };
 };
 type MappedFromOriginal = SameKeys<Original>;
-declare const getStringAndNumberFromOriginalAndMapped: <K extends KeyOfOriginal, N extends NestedKeyOfOriginalFor<K>>(original: Original, mappedFromOriginal: MappedFromOriginal, key: K, nestedKey: N) => [Original[K][N], MappedFromOriginal[K][N]];
+declare const getStringAndNumberFromOriginalAndMapped: <K extends keyof Original, N extends keyof Original[K]>(original: Original, mappedFromOriginal: SameKeys<Original>, key: K, nestedKey: N) => [Original[K][N], SameKeys<Original>[K][N]];
 interface Config {
     string: string;
     number: number;