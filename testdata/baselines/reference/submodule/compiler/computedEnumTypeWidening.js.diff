--- old.computedEnumTypeWidening.js
+++ new.computedEnumTypeWidening.js
@@= skipped -79, +79 lines =@@


 //// [computedEnumTypeWidening.js]
-"use strict";
 var E;
 (function (E) {
-    E[E["A"] = computed(0)] = "A";
-    E[E["B"] = computed(1)] = "B";
-    E[E["C"] = computed(2)] = "C";
-    E[E["D"] = computed(3)] = "D";
+    E["A"] = computed(0);
+    if (typeof E.A !== "string") E[E.A] = "A";
+    E["B"] = computed(1);
+    if (typeof E.B !== "string") E[E.B] = "B";
+    E["C"] = computed(2);
+    if (typeof E.C !== "string") E[E.C] = "C";
+    E["D"] = computed(3);
+    if (typeof E.D !== "string") E[E.D] = "D";
 })(E || (E = {}));
 function f1() {
     const c1 = E.B; // Fresh E.B
@@= skipped -51, +54 lines =@@
 let v1 = E.B;
 let v2 = E.B;
 class C {
-    constructor() {
-        this.p1 = E.B;
-        this.p2 = E.B;
-        this.p3 = E.B;
-        this.p4 = E.B;
-    }
+    p1 = E.B;
+    p2 = E.B;
+    p3 = E.B;
+    p4 = E.B;
 }
 // Repro from #52531
 var MyEnum;
@@= skipped -45, +43 lines =@@
 declare class C {
     p1: E;
     p2: E.B;
-    readonly p3 = E.B;
+    readonly p3: E;
     readonly p4: E.B;
 }
 declare enum MyEnum {