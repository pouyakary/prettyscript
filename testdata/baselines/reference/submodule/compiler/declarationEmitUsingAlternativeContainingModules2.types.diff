--- old.declarationEmitUsingAlternativeContainingModules2.types
+++ new.declarationEmitUsingAlternativeContainingModules2.types
@@= skipped -353, +353 lines =@@
 >fetch(baseUrl + 'entries')      .then((res) => res.json()) : Promise<any>
 >fetch(baseUrl + 'entries')      .then : <TResult1 = Response, TResult2 = never>(onfulfilled?: ((value: Response) => TResult1 | PromiseLike<TResult1>) | null | undefined, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null | undefined) => Promise<TResult1 | TResult2>
 >fetch(baseUrl + 'entries') : Promise<Response>
->fetch : (input: RequestInfo | URL, init?: RequestInit) => Promise<Response>
+>fetch : (input: URL | RequestInfo, init?: RequestInit | undefined) => Promise<Response>
 >baseUrl + 'entries' : string
 >baseUrl : "https://api.publicapis.org/"
 >'entries' : "entries"
@@= skipped -83, +83 lines =@@
 >(data) => data.slice(0, 10) : (data: IEntry[]) => IEntry[]
 >data : IEntry[]
 >data.slice(0, 10) : IEntry[]
->data.slice : (start?: number, end?: number) => IEntry[]
+>data.slice : (start?: number | undefined, end?: number | undefined) => IEntry[]
 >data : IEntry[]
->slice : (start?: number, end?: number) => IEntry[]
+>slice : (start?: number | undefined, end?: number | undefined) => IEntry[]
 >0 : 0
 >10 : 10
