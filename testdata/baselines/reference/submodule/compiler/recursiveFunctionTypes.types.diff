--- old.recursiveFunctionTypes.types
+++ new.recursiveFunctionTypes.types
@@= skipped -14, +14 lines =@@
 >fn : () => typeof fn

 var f: () => typeof g;
->f : () => typeof g
->g : () => typeof f
+>f : () => () => any
+>g : () => () => any

 var g: () => typeof f;
->g : () => typeof f
->f : () => typeof g
+>g : () => () => any
+>f : () => () => any

 function f1(d: typeof f1) { }
 >f1 : (d: typeof f1) => void
@@= skipped -13, +13 lines =@@
 >f1 : (d: typeof f1) => void

 function f2(): typeof g2 { } 
->f2 : () => typeof g2
->g2 : () => typeof f2
+>f2 : () => () => typeof f2
+>g2 : () => () => typeof g2

 function g2(): typeof f2 { } 
->g2 : () => typeof f2
->f2 : () => typeof g2
+>g2 : () => () => typeof g2
+>f2 : () => () => typeof f2

 interface I<T> { }
 function f3(): I<typeof f3> { return f3; }
@@= skipped -35, +35 lines =@@
 >3 : 3

 var f4: () => typeof f4;
->f4 : () => typeof f4
->f4 : () => typeof f4
+>f4 : () => any
+>f4 : () => any

 f4 = 3; // error
 >f4 = 3 : 3
->f4 : () => typeof f4
+>f4 : () => any
 >3 : 3

 function f5() { return f5; }