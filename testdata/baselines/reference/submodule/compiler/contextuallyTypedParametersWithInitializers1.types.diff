--- old.contextuallyTypedParametersWithInitializers1.types
+++ new.contextuallyTypedParametersWithInitializers1.types
@@= skipped -16, +16 lines =@@
 >input : T

 declare function id4<T extends (x: { foo?: number }) => any>(input: T): T;
->id4 : <T extends (x: { foo?: number; }) => any>(input: T) => T
->x : { foo?: number; }
+>id4 : <T extends (x: { foo?: number | undefined; }) => any>(input: T) => T
+>x : { foo?: number | undefined; }
 >foo : number | undefined
 >input : T

 declare function id5<T extends (x?: number) => any>(input: T): T;
->id5 : <T extends (x?: number) => any>(input: T) => T
+>id5 : <T extends (x?: number | undefined) => any>(input: T) => T
 >x : number | undefined
 >input : T

@@= skipped -45, +45 lines =@@
 >foo : any

 const f14 = id4(function ({ foo = 42 }) { return foo });
->f14 : ({ foo }: { foo?: number; }) => number
->id4(function ({ foo = 42 }) { return foo }) : ({ foo }: { foo?: number; }) => number
->id4 : <T extends (x: { foo?: number; }) => any>(input: T) => T
->function ({ foo = 42 }) { return foo } : ({ foo }: { foo?: number; }) => number
+>f14 : ({ foo }: { foo?: number | undefined; }) => number
+>id4(function ({ foo = 42 }) { return foo }) : ({ foo }: { foo?: number | undefined; }) => number
+>id4 : <T extends (x: { foo?: number | undefined; }) => any>(input: T) => T
+>function ({ foo = 42 }) { return foo } : ({ foo }: { foo?: number | undefined; }) => number
 >foo : number
 >42 : 42
 >foo : number
@@= skipped -36, +36 lines =@@
 const f25 = id5(function (foo = 42) { return foo });
 >f25 : (foo?: number | undefined) => number
 >id5(function (foo = 42) { return foo }) : (foo?: number | undefined) => number
->id5 : <T extends (x?: number) => any>(input: T) => T
+>id5 : <T extends (x?: number | undefined) => any>(input: T) => T
 >function (foo = 42) { return foo } : (foo?: number | undefined) => number
 >foo : number | undefined
 >42 : 42