--- old.predicateSemantics.errors.txt
+++ new.predicateSemantics.errors.txt
@@= skipped -5, +5 lines =@@
 predicateSemantics.ts(29,13): error TS2871: This expression is always nullish.
 predicateSemantics.ts(30,13): error TS2872: This kind of expression is always truthy.
 predicateSemantics.ts(31,13): error TS2872: This kind of expression is always truthy.
-predicateSemantics.ts(32,13): error TS2871: This expression is always nullish.
-predicateSemantics.ts(32,21): error TS2871: This expression is always nullish.
-predicateSemantics.ts(33,13): error TS2871: This expression is always nullish.
-predicateSemantics.ts(34,13): error TS2871: This expression is always nullish.
-predicateSemantics.ts(34,22): error TS2871: This expression is always nullish.
-predicateSemantics.ts(36,20): error TS2871: This expression is always nullish.
-predicateSemantics.ts(37,20): error TS2871: This expression is always nullish.
+predicateSemantics.ts(32,13): error TS2870: This binary expression is never nullish. Are you missing parentheses?
+predicateSemantics.ts(33,13): error TS2870: This binary expression is never nullish. Are you missing parentheses?
+predicateSemantics.ts(34,13): error TS2870: This binary expression is never nullish. Are you missing parentheses?
 predicateSemantics.ts(38,21): error TS2871: This expression is always nullish.
 predicateSemantics.ts(39,21): error TS2871: This expression is always nullish.
-predicateSemantics.ts(40,21): error TS2871: This expression is always nullish.
-predicateSemantics.ts(40,29): error TS2871: This expression is always nullish.
-predicateSemantics.ts(41,21): error TS2871: This expression is always nullish.
-predicateSemantics.ts(42,20): error TS2881: This expression is never nullish.
-predicateSemantics.ts(43,21): error TS2881: This expression is never nullish.
-predicateSemantics.ts(45,13): error TS2871: This expression is always nullish.
-predicateSemantics.ts(45,21): error TS2871: This expression is always nullish.
-predicateSemantics.ts(45,29): error TS2871: This expression is always nullish.
-predicateSemantics.ts(46,13): error TS2871: This expression is always nullish.
-predicateSemantics.ts(46,21): error TS2881: This expression is never nullish.
-predicateSemantics.ts(47,13): error TS2871: This expression is always nullish.
-predicateSemantics.ts(47,22): error TS2881: This expression is never nullish.
+predicateSemantics.ts(40,21): error TS2870: This binary expression is never nullish. Are you missing parentheses?
+predicateSemantics.ts(45,13): error TS2870: This binary expression is never nullish. Are you missing parentheses?
+predicateSemantics.ts(46,13): error TS2870: This binary expression is never nullish. Are you missing parentheses?
+predicateSemantics.ts(47,13): error TS2870: This binary expression is never nullish. Are you missing parentheses?
 predicateSemantics.ts(50,8): error TS2872: This kind of expression is always truthy.
 predicateSemantics.ts(51,11): error TS2872: This kind of expression is always truthy.
 predicateSemantics.ts(52,8): error TS2872: This kind of expression is always truthy.
@@= skipped -32, +20 lines =@@
 predicateSemantics.ts(90,1): error TS2869: Right operand of ?? is unreachable because the left operand is never nullish.


-==== predicateSemantics.ts (38 errors) ====
+==== predicateSemantics.ts (26 errors) ====
     declare let opt: number | undefined;
     
     // OK: One or other operand is possibly nullish
@@= skipped -50, +50 lines =@@
 !!! error TS2872: This kind of expression is always truthy.
     const p07 = null ?? null ?? null;
                 ~~~~
-!!! error TS2871: This expression is always nullish.
-                        ~~~~
-!!! error TS2871: This expression is always nullish.
+!!! error TS2870: This binary expression is never nullish. Are you missing parentheses?
     const p08 = null ?? opt ?? null;
                 ~~~~
-!!! error TS2871: This expression is always nullish.
+!!! error TS2870: This binary expression is never nullish. Are you missing parentheses?
     const p09 = null ?? (opt ? null : undefined) ?? null;
                 ~~~~
-!!! error TS2871: This expression is always nullish.
-                         ~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS2871: This expression is always nullish.
+!!! error TS2870: This binary expression is never nullish. Are you missing parentheses?
     
     const p10 = opt ?? null ?? 1;
-                       ~~~~
-!!! error TS2871: This expression is always nullish.
     const p11 = opt ?? null ?? null;
-                       ~~~~
-!!! error TS2871: This expression is always nullish.
     const p12 = opt ?? (null ?? 1);
                         ~~~~
 !!! error TS2871: This expression is always nullish.
@@= skipped -26, +18 lines =@@
 !!! error TS2871: This expression is always nullish.
     const p14 = opt ?? (null ?? null ?? null);
                         ~~~~
-!!! error TS2871: This expression is always nullish.
-                                ~~~~
-!!! error TS2871: This expression is always nullish.
+!!! error TS2870: This binary expression is never nullish. Are you missing parentheses?
     const p15 = opt ?? (opt ? null : undefined) ?? null;
-                        ~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS2871: This expression is always nullish.
     const p16 = opt ?? 1 ?? 2;
-                       ~
-!!! error TS2881: This expression is never nullish.
     const p17 = opt ?? (opt ? 1 : 2) ?? 3;
-                        ~~~~~~~~~~~
-!!! error TS2881: This expression is never nullish.
     
     const p21 = null ?? null ?? null ?? null;
                 ~~~~
-!!! error TS2871: This expression is always nullish.
-                        ~~~~
-!!! error TS2871: This expression is always nullish.
-                                ~~~~
-!!! error TS2871: This expression is always nullish.
+!!! error TS2870: This binary expression is never nullish. Are you missing parentheses?
     const p22 = null ?? 1 ?? 1;
                 ~~~~
-!!! error TS2871: This expression is always nullish.
-                        ~
-!!! error TS2881: This expression is never nullish.
+!!! error TS2870: This binary expression is never nullish. Are you missing parentheses?
     const p23 = null ?? (opt ? 1 : 2) ?? 1;
                 ~~~~
-!!! error TS2871: This expression is always nullish.
-                         ~~~~~~~~~~~
-!!! error TS2881: This expression is never nullish.
+!!! error TS2870: This binary expression is never nullish. Are you missing parentheses?
     
     // Outer expression tests
     while ({} as any) { }