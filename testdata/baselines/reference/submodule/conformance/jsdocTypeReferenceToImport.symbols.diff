--- old.jsdocTypeReferenceToImport.symbols
+++ new.jsdocTypeReferenceToImport.symbols
@@= skipped -4, +4 lines =@@
 >C : Symbol(C, Decl(jsdocTypeReferenceToImport.js, 0, 5))
 >require('./ex').C : Symbol(C, Decl(ex.d.ts, 0, 0))
 >require : Symbol(require)
->'./ex' : Symbol("ex", Decl(ex.d.ts, 0, 0))
 >C : Symbol(C, Decl(ex.d.ts, 0, 0))

 const D = require('./ex')?.C;
 >D : Symbol(D, Decl(jsdocTypeReferenceToImport.js, 1, 5))
 >require('./ex')?.C : Symbol(C, Decl(ex.d.ts, 0, 0))
 >require : Symbol(require)
->'./ex' : Symbol("ex", Decl(ex.d.ts, 0, 0))
 >C : Symbol(C, Decl(ex.d.ts, 0, 0))

 /** @type {C} c */
@@= skipped -16, +14 lines =@@
 >C : Symbol(C, Decl(jsdocTypeReferenceToImport.js, 0, 5))

 c.start
->c.start : Symbol(C.start, Decl(ex.d.ts, 0, 16))
 >c : Symbol(c, Decl(jsdocTypeReferenceToImport.js, 3, 3))
->start : Symbol(C.start, Decl(ex.d.ts, 0, 16))

 c.end
->c.end : Symbol(C.end, Decl(ex.d.ts, 1, 17))
 >c : Symbol(c, Decl(jsdocTypeReferenceToImport.js, 3, 3))
->end : Symbol(C.end, Decl(ex.d.ts, 1, 17))

 /** @type {D} c */
 var d = new D()
@@= skipped -15, +11 lines =@@
 >D : Symbol(D, Decl(jsdocTypeReferenceToImport.js, 1, 5))

 d.start
->d.start : Symbol(C.start, Decl(ex.d.ts, 0, 16))
 >d : Symbol(d, Decl(jsdocTypeReferenceToImport.js, 8, 3))
->start : Symbol(C.start, Decl(ex.d.ts, 0, 16))

 d.end
->d.end : Symbol(C.end, Decl(ex.d.ts, 1, 17))
 >d : Symbol(d, Decl(jsdocTypeReferenceToImport.js, 8, 3))
->end : Symbol(C.end, Decl(ex.d.ts, 1, 17))

 === ex.d.ts ===
 export class C {