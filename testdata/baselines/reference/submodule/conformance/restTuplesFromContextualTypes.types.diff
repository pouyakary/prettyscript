--- old.restTuplesFromContextualTypes.types
+++ new.restTuplesFromContextualTypes.types
@@= skipped -52, +52 lines =@@
 >t1 : [number, boolean, string]

 declare function f1(cb: (...args: typeof t1) => void): void;
->f1 : (cb: (...args: typeof t1) => void) => void
+>f1 : (cb: (args_0: number, args_1: boolean, args_2: string) => void) => void
 >cb : (args_0: number, args_1: boolean, args_2: string) => void
 >args : [number, boolean, string]
 >t1 : [number, boolean, string]

 f1((a, b, c) => {})
 >f1((a, b, c) => {}) : void
->f1 : (cb: (...args: typeof t1) => void) => void
+>f1 : (cb: (args_0: number, args_1: boolean, args_2: string) => void) => void
 >(a, b, c) => {} : (a: number, b: boolean, c: string) => void
 >a : number
 >b : boolean
@@= skipped -15, +15 lines =@@

 f1((...x) => {})
 >f1((...x) => {}) : void
->f1 : (cb: (...args: typeof t1) => void) => void
+>f1 : (cb: (args_0: number, args_1: boolean, args_2: string) => void) => void
 >(...x) => {} : (x_0: number, x_1: boolean, x_2: string) => void
 >x : [number, boolean, string]

 f1((a, ...x) => {})
 >f1((a, ...x) => {}) : void
->f1 : (cb: (...args: typeof t1) => void) => void
+>f1 : (cb: (args_0: number, args_1: boolean, args_2: string) => void) => void
 >(a, ...x) => {} : (a: number, x_0: boolean, x_1: string) => void
 >a : number
 >x : [boolean, string]

 f1((a, b, ...x) => {})
 >f1((a, b, ...x) => {}) : void
->f1 : (cb: (...args: typeof t1) => void) => void
+>f1 : (cb: (args_0: number, args_1: boolean, args_2: string) => void) => void
 >(a, b, ...x) => {} : (a: number, b: boolean, x_0: string) => void
 >a : number
 >b : boolean
@@= skipped -21, +21 lines =@@

 f1((a, b, c, ...x) => {})
 >f1((a, b, c, ...x) => {}) : void
->f1 : (cb: (...args: typeof t1) => void) => void
+>f1 : (cb: (args_0: number, args_1: boolean, args_2: string) => void) => void
 >(a, b, c, ...x) => {} : (a: number, b: boolean, c: string) => void
 >a : number
 >b : boolean
@@= skipped -59, +59 lines =@@
 >t2 : [number, boolean, ...string[]]

 declare function f2(cb: (...args: typeof t2) => void): void;
->f2 : (cb: (...args: typeof t2) => void) => void
+>f2 : (cb: (args_0: number, args_1: boolean, ...args: string[]) => void) => void
 >cb : (args_0: number, args_1: boolean, ...args: string[]) => void
 >args : [number, boolean, ...string[]]
 >t2 : [number, boolean, ...string[]]

 f2((a, b, c) => {})
 >f2((a, b, c) => {}) : void
->f2 : (cb: (...args: typeof t2) => void) => void
+>f2 : (cb: (args_0: number, args_1: boolean, ...args: string[]) => void) => void
 >(a, b, c) => {} : (a: number, b: boolean, c: string) => void
 >a : number
 >b : boolean
@@= skipped -15, +15 lines =@@

 f2((...x) => {})
 >f2((...x) => {}) : void
->f2 : (cb: (...args: typeof t2) => void) => void
+>f2 : (cb: (args_0: number, args_1: boolean, ...args: string[]) => void) => void
 >(...x) => {} : (x_0: number, x_1: boolean, ...x: string[]) => void
 >x : [number, boolean, ...string[]]

 f2((a, ...x) => {})
 >f2((a, ...x) => {}) : void
->f2 : (cb: (...args: typeof t2) => void) => void
+>f2 : (cb: (args_0: number, args_1: boolean, ...args: string[]) => void) => void
 >(a, ...x) => {} : (a: number, x_0: boolean, ...x: string[]) => void
 >a : number
 >x : [boolean, ...string[]]

 f2((a, b, ...x) => {})
 >f2((a, b, ...x) => {}) : void
->f2 : (cb: (...args: typeof t2) => void) => void
+>f2 : (cb: (args_0: number, args_1: boolean, ...args: string[]) => void) => void
 >(a, b, ...x) => {} : (a: number, b: boolean, ...x: string[]) => void
 >a : number
 >b : boolean
@@= skipped -21, +21 lines =@@

 f2((a, b, c, ...x) => {})
 >f2((a, b, c, ...x) => {}) : void
->f2 : (cb: (...args: typeof t2) => void) => void
+>f2 : (cb: (args_0: number, args_1: boolean, ...args: string[]) => void) => void
 >(a, b, c, ...x) => {} : (a: number, b: boolean, c: string, ...x: string[]) => void
 >a : number
 >b : boolean
@@= skipped -64, +64 lines =@@
 >t3 : [boolean, ...string[]]

 declare function f3(cb: (x: number, ...args: typeof t3) => void): void;
->f3 : (cb: (x: number, ...args: typeof t3) => void) => void
+>f3 : (cb: (x: number, args_0: boolean, ...args: string[]) => void) => void
 >cb : (x: number, args_0: boolean, ...args: string[]) => void
 >x : number
 >args : [boolean, ...string[]]
@@= skipped -8, +8 lines =@@

 f3((a, b, c) => {})
 >f3((a, b, c) => {}) : void
->f3 : (cb: (x: number, ...args: typeof t3) => void) => void
+>f3 : (cb: (x: number, args_0: boolean, ...args: string[]) => void) => void
 >(a, b, c) => {} : (a: number, b: boolean, c: string) => void
 >a : number
 >b : boolean
@@= skipped -8, +8 lines =@@

 f3((...x) => {})
 >f3((...x) => {}) : void
->f3 : (cb: (x: number, ...args: typeof t3) => void) => void
+>f3 : (cb: (x: number, args_0: boolean, ...args: string[]) => void) => void
 >(...x) => {} : (x: number, x_1: boolean, ...x_2: string[]) => void
 >x : [x: number, boolean, ...string[]]

 f3((a, ...x) => {})
 >f3((a, ...x) => {}) : void
->f3 : (cb: (x: number, ...args: typeof t3) => void) => void
+>f3 : (cb: (x: number, args_0: boolean, ...args: string[]) => void) => void
 >(a, ...x) => {} : (a: number, x_0: boolean, ...x: string[]) => void
 >a : number
 >x : [boolean, ...string[]]

 f3((a, b, ...x) => {})
 >f3((a, b, ...x) => {}) : void
->f3 : (cb: (x: number, ...args: typeof t3) => void) => void
+>f3 : (cb: (x: number, args_0: boolean, ...args: string[]) => void) => void
 >(a, b, ...x) => {} : (a: number, b: boolean, ...x: string[]) => void
 >a : number
 >b : boolean
@@= skipped -21, +21 lines =@@

 f3((a, b, c, ...x) => {})
 >f3((a, b, c, ...x) => {}) : void
->f3 : (cb: (x: number, ...args: typeof t3) => void) => void
+>f3 : (cb: (x: number, args_0: boolean, ...args: string[]) => void) => void
 >(a, b, c, ...x) => {} : (a: number, b: boolean, c: string, ...x: string[]) => void
 >a : number
 >b : boolean