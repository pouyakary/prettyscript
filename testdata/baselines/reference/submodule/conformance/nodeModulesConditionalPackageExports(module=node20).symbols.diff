--- old.nodeModulesConditionalPackageExports(module=node20).symbols
+++ new.nodeModulesConditionalPackageExports(module=node20).symbols
@@= skipped -32, +32 lines =@@
 >ts : Symbol(ts, Decl(index.ts, 10, 6))

 cjsi.mjsSource;
->cjsi.mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))
 >cjsi : Symbol(cjsi, Decl(index.ts, 7, 6))
->mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))

 mjsi.mjsSource;
->mjsi.mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))
 >mjsi : Symbol(mjsi, Decl(index.ts, 8, 6))
->mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))

 typei.mjsSource;
->typei.mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))
 >typei : Symbol(typei, Decl(index.ts, 9, 6))
->mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))

 ts.mjsSource;
->ts.mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))
 >ts : Symbol(ts, Decl(index.ts, 10, 6))
->mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))

 === index.mts ===
 // esm format file
@@= skipped -52, +44 lines =@@
 >ts : Symbol(ts, Decl(index.mts, 10, 6))

 cjsi.mjsSource;
->cjsi.mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))
 >cjsi : Symbol(cjsi, Decl(index.mts, 7, 6))
->mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))

 mjsi.mjsSource;
->mjsi.mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))
+>mjsi.mjsSource : Symbol(mjsi.mjsSource, Decl(index.d.mts, 9, 12))
 >mjsi : Symbol(mjsi, Decl(index.mts, 8, 6))
->mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))
+>mjsSource : Symbol(mjsi.mjsSource, Decl(index.d.mts, 9, 12))

 typei.mjsSource;
->typei.mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))
+>typei.mjsSource : Symbol(mjsi.mjsSource, Decl(index.d.mts, 9, 12))
 >typei : Symbol(typei, Decl(index.mts, 9, 6))
->mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))
+>mjsSource : Symbol(mjsi.mjsSource, Decl(index.d.mts, 9, 12))

 ts.mjsSource;
->ts.mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))
+>ts.mjsSource : Symbol(mjsi.mjsSource, Decl(index.d.mts, 9, 12))
 >ts : Symbol(ts, Decl(index.mts, 10, 6))
->mjsSource : Symbol(cjsi.mjsSource, Decl(index.d.mts, 9, 12))
+>mjsSource : Symbol(mjsi.mjsSource, Decl(index.d.mts, 9, 12))

 === index.cts ===
 // cjs format file
@@= skipped -57, +55 lines =@@
 >cjsSource : Symbol(cjsi.cjsSource, Decl(index.d.cts, 9, 12))

 mjsi.cjsSource;
->mjsi.cjsSource : Symbol(cjsi.cjsSource, Decl(index.d.cts, 9, 12))
 >mjsi : Symbol(mjsi, Decl(index.cts, 8, 6))
->cjsSource : Symbol(cjsi.cjsSource, Decl(index.d.cts, 9, 12))

 typei.implicitCjsSource;
->typei.implicitCjsSource : Symbol(cjsi.type.implicitCjsSource, Decl(index.d.ts, 9, 12))
 >typei : Symbol(typei, Decl(index.cts, 9, 6))
->implicitCjsSource : Symbol(cjsi.type.implicitCjsSource, Decl(index.d.ts, 9, 12))

 ts.cjsSource;
 >ts.cjsSource : Symbol(cjsi.cjsSource, Decl(index.d.cts, 9, 12))
@@= skipped -29, +25 lines =@@
 >ts : Symbol(ts, Decl(index.d.ts, 4, 6))

 export { cjs };
->cjs : Symbol(mjs.type.cjs, Decl(index.d.ts, 5, 8))
+>cjs : Symbol(cjs, Decl(index.d.ts, 5, 8))

 export { mjs };
->mjs : Symbol(mjs.type.mjs, Decl(index.d.ts, 6, 8))
+>mjs : Symbol(mjs, Decl(index.d.ts, 6, 8))

 export { type };
->type : Symbol(mjs.type.type, Decl(index.d.ts, 7, 8))
+>type : Symbol(type, Decl(index.d.ts, 7, 8))

 export { ts };
->ts : Symbol(mjs.type.ts, Decl(index.d.ts, 8, 8))
+>ts : Symbol(ts, Decl(index.d.ts, 8, 8))

 export const implicitCjsSource = true;
->implicitCjsSource : Symbol(mjs.type.implicitCjsSource, Decl(index.d.ts, 9, 12))
+>implicitCjsSource : Symbol(implicitCjsSource, Decl(index.d.ts, 9, 12))

 === node_modules/inner/index.d.mts ===
 // esm format file
@@= skipped -41, +41 lines =@@
 >ts : Symbol(mjs.ts, Decl(index.d.mts, 8, 8))

 export const mjsSource = true;
->mjsSource : Symbol(mjs.mjsSource, Decl(index.d.mts, 9, 12))
+>mjsSource : Symbol(mjsSource, Decl(index.d.mts, 9, 12))

 === node_modules/inner/index.d.cts ===
 // cjs format file
@@= skipped -29, +29 lines =@@
 >ts : Symbol(cjs.ts, Decl(index.d.cts, 8, 8))

 export const cjsSource = true;
->cjsSource : Symbol(cjs.cjsSource, Decl(index.d.cts, 9, 12))
+>cjsSource : Symbol(cjsSource, Decl(index.d.cts, 9, 12))
