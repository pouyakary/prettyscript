//// [tests/cases/conformance/salsa/typeFromPropertyAssignment16.ts] ////

=== a.js ===
var Outer = {};
>Outer : Symbol(Outer, Decl(a.js, 0, 3))

Outer.Inner = function () {}
>Outer.Inner : Symbol(Inner, Decl(a.js, 0, 15))
>Outer : Symbol(Outer, Decl(a.js, 0, 3))
>Inner : Symbol(Inner, Decl(a.js, 0, 15))

Outer.Inner.prototype = {
>Outer.Inner.prototype : Symbol(Inner.prototype, Decl(a.js, 2, 28))
>Outer.Inner : Symbol(Inner, Decl(a.js, 0, 15))
>Outer : Symbol(Outer, Decl(a.js, 0, 3))
>Inner : Symbol(Inner, Decl(a.js, 0, 15))
>prototype : Symbol(Inner.prototype, Decl(a.js, 2, 28))

    x: 1,
>x : Symbol(x, Decl(a.js, 3, 25))

    m() { }
>m : Symbol(m, Decl(a.js, 4, 9))
}

/** @type {Outer.Inner} */
var inner
>inner : Symbol(inner, Decl(a.js, 9, 3))

inner.x
>inner : Symbol(inner, Decl(a.js, 9, 3))

inner.m()
>inner : Symbol(inner, Decl(a.js, 9, 3))

var inno = new Outer.Inner()
>inno : Symbol(inno, Decl(a.js, 12, 3))
>Outer.Inner : Symbol(Inner, Decl(a.js, 0, 15))
>Outer : Symbol(Outer, Decl(a.js, 0, 3))
>Inner : Symbol(Inner, Decl(a.js, 0, 15))

inno.x
>inno : Symbol(inno, Decl(a.js, 12, 3))

inno.m()
>inno : Symbol(inno, Decl(a.js, 12, 3))

