--- old.nodeModulesPackagePatternExportsExclude(module=node16).types
+++ new.nodeModulesPackagePatternExportsExclude(module=node16).types
@@= skipped -23, +23 lines =@@
 >cjsi2 : typeof cjsi2

 import * as mjsi2 from "inner/mjs/index";
->mjsi2 : typeof cjsi2.cjs.mjs
+>mjsi2 : typeof mjsi2

 import * as typei2 from "inner/js/index";
 >typei2 : typeof typei2
@@= skipped -9, +9 lines =@@
 >cjsi2 : typeof cjsi2

 mjsi2;
->mjsi2 : typeof cjsi2.cjs.mjs
+>mjsi2 : typeof mjsi2

 typei2;
 >typei2 : typeof typei2
@@= skipped -29, +29 lines =@@
 >cjsi2 : typeof cjsi2

 import * as mjsi2 from "inner/mjs/index";
->mjsi2 : typeof cjsi2.cjs.mjs
+>mjsi2 : typeof mjsi2

 import * as typei2 from "inner/js/index";
 >typei2 : typeof typei2
@@= skipped -9, +9 lines =@@
 >cjsi2 : typeof cjsi2

 mjsi2;
->mjsi2 : typeof cjsi2.cjs.mjs
+>mjsi2 : typeof mjsi2

 typei2;
 >typei2 : typeof typei2
@@= skipped -29, +29 lines =@@
 >cjsi2 : typeof cjsi2

 import * as mjsi2 from "inner/mjs/index";
->mjsi2 : typeof cjsi2.mjs
+>mjsi2 : typeof mjsi2

 import * as typei2 from "inner/js/index";
->typei2 : typeof cjsi2.mjs.cjs.type
+>typei2 : typeof typei2

 cjsi2;
 >cjsi2 : typeof cjsi2

 mjsi2;
->mjsi2 : typeof cjsi2.mjs
+>mjsi2 : typeof mjsi2

 typei2;
->typei2 : typeof cjsi2.mjs.cjs.type
+>typei2 : typeof typei2

 === node_modules/inner/exclude/index.d.ts ===
 // cjs format file
@@= skipped -77, +77 lines =@@
 === node_modules/inner/index.d.ts ===
 // cjs format file
 import * as cjs from "inner/cjs/index";
->cjs : any
+>cjs : typeof cjs

 import * as mjs from "inner/mjs/index";
 >mjs : typeof mjs

 import * as type from "inner/js/index";
->type : typeof mjs.cjs.cjs.type
+>type : typeof type

 export { cjs };
->cjs : any
+>cjs : typeof cjs

 export { mjs };
 >mjs : typeof mjs

 export { type };
->type : typeof mjs.cjs.cjs.type
+>type : typeof type

 === node_modules/inner/index.d.mts ===
 // esm format file
@@= skipped -23, +23 lines =@@
 >cjs : typeof cjs

 import * as mjs from "inner/mjs/index";
->mjs : typeof cjs.cjs.mjs
+>mjs : typeof mjs

 import * as type from "inner/js/index";
->type : typeof cjs.cjs.mjs.type
+>type : typeof type

 export { cjs };
 >cjs : typeof cjs

 export { mjs };
->mjs : typeof cjs.cjs.mjs
+>mjs : typeof mjs

 export { type };
->type : typeof cjs.cjs.mjs.type
+>type : typeof type

 === node_modules/inner/index.d.cts ===
 // cjs format file
@@= skipped -20, +20 lines =@@
 >cjs : typeof cjs

 import * as mjs from "inner/mjs/index";
->mjs : typeof cjs.mjs
+>mjs : typeof mjs

 import * as type from "inner/js/index";
->type : typeof cjs.mjs.cjs.type
+>type : typeof type

 export { cjs };
 >cjs : typeof cjs

 export { mjs };
->mjs : typeof cjs.mjs
+>mjs : typeof mjs

 export { type };
->type : typeof cjs.mjs.cjs.type
+>type : typeof type
