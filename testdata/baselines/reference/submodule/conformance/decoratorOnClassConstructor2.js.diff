--- old.decoratorOnClassConstructor2.js
+++ new.decoratorOnClassConstructor2.js
@@= skipped -23, +23 lines =@@
 function foo(target, propertyKey, parameterIndex) { }
 //// [2.js]
 "use strict";
-var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
-    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
-    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
-    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
-    return c > 3 && r && Object.defineProperty(target, key, r), r;
-};
-var __param = (this && this.__param) || function (paramIndex, decorator) {
-    return function (target, key) { decorator(target, key, paramIndex); }
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.C = void 0;
-var _0_ts_1 = require("./0.ts");
-var _0_ts_2 = require("./0.ts");
-let C = (() => {
-    let C = class C extends _0_ts_1.base {
-        constructor(prop) {
-            super();
-        }
-    };
-    C = __decorate([
-        __param(0, _0_ts_2.foo)
-    ], C);
-    return C;
-})();
+const _0_ts_1 = require("./0.ts");
+const _0_ts_2 = require("./0.ts");
+class C extends _0_ts_1.base {
+    constructor(prop) {
+        super();
+    }
+}
 exports.C = C;