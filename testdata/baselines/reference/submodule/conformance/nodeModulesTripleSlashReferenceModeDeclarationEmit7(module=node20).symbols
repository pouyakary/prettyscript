//// [tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit7.ts] ////

=== /index.ts ===
// only an esm file can `import` both kinds of files
import obj1 from "./sub1/uses.js"
>obj1 : Symbol(obj1, Decl(index.ts, 1, 6))

import obj2 from "./sub2/uses.js"
>obj2 : Symbol(obj2, Decl(index.ts, 2, 6))

export default [obj1, obj2.default] as const;
>obj1 : Symbol(obj1, Decl(index.ts, 1, 6))
>obj2 : Symbol(obj2, Decl(index.ts, 2, 6))
>const : Symbol(const)

=== /node_modules/pkg/require.d.ts ===
export {};
declare global {
>global : Symbol(global, Decl(require.d.ts, 0, 10))

    interface RequireInterface { _r: any; }
>RequireInterface : Symbol(RequireInterface, Decl(require.d.ts, 1, 16))
>_r : Symbol(RequireInterface._r, Decl(require.d.ts, 2, 32))

    function getInterR(): RequireInterface;
>getInterR : Symbol(getInterR, Decl(require.d.ts, 2, 43))
>RequireInterface : Symbol(RequireInterface, Decl(require.d.ts, 1, 16))
}
=== /sub1/uses.ts ===

/// <reference types="pkg" preserve="true" />
export default getInterI();
=== /sub2/uses.ts ===
/// <reference types="pkg" preserve="true" />
export default getInterR();
>getInterR : Symbol(getInterR, Decl(require.d.ts, 2, 43))

