--- old.unknownControlFlow.types
+++ new.unknownControlFlow.types
@@= skipped -334, +334 lines =@@
 }

 function f23<T>(x: T | undefined | null) {
->f23 : <T>(x: T | undefined | null) => void
+>f23 : <T>(x: T | null | undefined) => void
 >x : T | null | undefined

     if (x !== undefined) {
@@= skipped -483, +483 lines =@@
 }

 function fx2<T extends {}>(value: T & ({} | null)) {
->fx2 : <T extends {}>(value: T & ({} | null)) => void
+>fx2 : <T extends {}>(value: T) => void
 >value : T

     if (value === 42) {
@@= skipped -18, +18 lines =@@
 }

 function fx3<T extends {} | undefined>(value: T & ({} | null)) {
->fx3 : <T extends {} | undefined>(value: T & ({} | null)) => void
+>fx3 : <T extends {} | undefined>(value: T & {}) => void
 >value : T & {}

     if (value === 42) {
@@= skipped -18, +18 lines =@@
 }

 function fx4<T extends {} | null>(value: T & ({} | null)) {
->fx4 : <T extends {} | null>(value: T & ({} | null)) => void
+>fx4 : <T extends {} | null>(value: T) => void
 >value : T

     if (value === 42) {
@@= skipped -181, +181 lines =@@
 >AB : AB

 function x<T_AB extends AB>(x: T_AB & undefined, y: any) {
->x : <T_AB extends AB>(x: T_AB & undefined, y: any) => void
+>x : <T_AB extends AB>(x: never, y: any) => void
 >x : never
 >y : any
