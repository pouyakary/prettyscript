--- old.propertyAccess.errors.txt
+++ new.propertyAccess.errors.txt
@@= skipped -0, +0 lines =@@
 propertyAccess.ts(11,55): error TS2353: Object literal may only specify known properties, and ''three'' does not exist in type '{ [n: number]: string; }'.
-propertyAccess.ts(45,14): error TS2339: Property 'qqq' does not exist on type '{ 10: string; x: string; y: number; z: { n: string; m: number; o: () => boolean; }; 'literal property': number; }'.
+propertyAccess.ts(45,14): error TS2339: Property 'qqq' does not exist on type '{ 10: string; x: string; y: number; z: { n: string; m: number; o: () => boolean; }; "literal property": number; }'.
 propertyAccess.ts(80,19): error TS2538: Type '{ name: string; }' cannot be used as an index type.
 propertyAccess.ts(117,18): error TS2538: Type '{ name: string; }' cannot be used as an index type.
 propertyAccess.ts(140,22): error TS2538: Type '{ name: string; }' cannot be used as an index type.
@@= skipped -54, +54 lines =@@
     // Dotted property access of property that doesn't exist on value's apparent type
     var cc = obj.qqq; // error
                  ~~~
-!!! error TS2339: Property 'qqq' does not exist on type '{ 10: string; x: string; y: number; z: { n: string; m: number; o: () => boolean; }; 'literal property': number; }'.
+!!! error TS2339: Property 'qqq' does not exist on type '{ 10: string; x: string; y: number; z: { n: string; m: number; o: () => boolean; }; "literal property": number; }'.
     
     // Bracket notation property access using string literal value on type with property of that literal name
     var dd = obj['literal property'];