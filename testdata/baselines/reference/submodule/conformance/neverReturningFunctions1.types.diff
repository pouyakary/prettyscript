--- old.neverReturningFunctions1.types
+++ new.neverReturningFunctions1.types
@@= skipped -1, +1 lines =@@

 === neverReturningFunctions1.ts ===
 function fail(message?: string): never {
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >message : string | undefined

     throw new Error(message);
@@= skipped -18, +18 lines =@@
 >x : string | undefined
 >undefined : undefined
 >fail("undefined argument") : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >"undefined argument" : "undefined argument"

     x.length;  // string
@@= skipped -21, +21 lines =@@

     fail("negative number");
 >fail("negative number") : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >"negative number" : "negative number"

     x;  // Unreachable
@@= skipped -16, +16 lines =@@

     fail();
 >fail() : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

     x;  // Unreachable
 >x : string
 }

 function f11(x: string | undefined, fail: (message?: string) => never) {
->f11 : (x: string | undefined, fail: (message?: string) => never) => void
+>f11 : (x: string | undefined, fail: (message?: string | undefined) => never) => void
 >x : string | undefined
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >message : string | undefined

     if (x === undefined) fail("undefined argument");
@@= skipped -17, +17 lines =@@
 >x : string | undefined
 >undefined : undefined
 >fail("undefined argument") : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >"undefined argument" : "undefined argument"

     x.length;  // string
@@= skipped -10, +10 lines =@@
 }

 function f12(x: number, fail: (message?: string) => never): number {
->f12 : (x: number, fail: (message?: string) => never) => number
+>f12 : (x: number, fail: (message?: string | undefined) => never) => number
 >x : number
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >message : string | undefined

     if (x >= 0) return x;
@@= skipped -13, +13 lines =@@

     fail("negative number");
 >fail("negative number") : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >"negative number" : "negative number"

     x;  // Unreachable
@@= skipped -8, +8 lines =@@
 }

 function f13(x: string, fail: (message?: string) => never) {
->f13 : (x: string, fail: (message?: string) => never) => void
+>f13 : (x: string, fail: (message?: string | undefined) => never) => void
 >x : string
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >message : string | undefined

     x;  // string
@@= skipped -10, +10 lines =@@

     fail();
 >fail() : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

     x;  // Unreachable
 >x : string
@@= skipped -10, +10 lines =@@
 >Debug : typeof Debug

     export declare function fail(message?: string): never;
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >message : string | undefined
 }

@@= skipped -13, +13 lines =@@
 >x : string | undefined
 >undefined : undefined
 >Debug.fail("undefined argument") : never
->Debug.fail : (message?: string) => never
+>Debug.fail : (message?: string | undefined) => never
 >Debug : typeof Debug
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >"undefined argument" : "undefined argument"

     x.length;  // string
@@= skipped -23, +23 lines =@@

     Debug.fail("negative number");
 >Debug.fail("negative number") : never
->Debug.fail : (message?: string) => never
+>Debug.fail : (message?: string | undefined) => never
 >Debug : typeof Debug
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >"negative number" : "negative number"

     x;  // Unreachable
@@= skipped -18, +18 lines =@@

     Debug.fail();
 >Debug.fail() : never
->Debug.fail : (message?: string) => never
+>Debug.fail : (message?: string | undefined) => never
 >Debug : typeof Debug
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

     x;  // Unreachable
 >x : string
@@= skipped -17, +17 lines =@@

     ((Debug).fail)();
 >((Debug).fail)() : never
->((Debug).fail) : (message?: string) => never
->(Debug).fail : (message?: string) => never
+>((Debug).fail) : (message?: string | undefined) => never
+>(Debug).fail : (message?: string | undefined) => never
 >(Debug) : typeof Debug
 >Debug : typeof Debug
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

     x;  // Unreachable
 >x : string
@@= skipped -14, +14 lines =@@
 >Test : Test

     fail(message?: string): never {
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >message : string | undefined

         throw new Error(message);
@@= skipped -17, +17 lines =@@
 >x : string | undefined
 >undefined : undefined
 >this.fail("undefined argument") : never
->this.fail : (message?: string) => never
+>this.fail : (message?: string | undefined) => never
 >this : this
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >"undefined argument" : "undefined argument"

         x.length;  // string
@@= skipped -22, +22 lines =@@

         this.fail("negative number");
 >this.fail("negative number") : never
->this.fail : (message?: string) => never
+>this.fail : (message?: string | undefined) => never
 >this : this
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never
 >"negative number" : "negative number"

         x;  // Unreachable
@@= skipped -17, +17 lines =@@

         this.fail();
 >this.fail() : never
->this.fail : (message?: string) => never
+>this.fail : (message?: string | undefined) => never
 >this : this
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

         x;  // Unreachable
 >x : string
@@= skipped -21, +21 lines =@@

         fail();
 >fail() : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

         x;  // Unreachable
 >x : string | number | undefined
@@= skipped -19, +19 lines =@@

             fail();
 >fail() : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

             x;  // Unreachable
 >x : string | number | undefined
@@= skipped -11, +11 lines =@@

             fail();
 >fail() : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

             x;  // Unreachable
 >x : string | number | undefined
@@= skipped -27, +27 lines =@@

         fail();
 >fail() : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

         x;    // Unreachable
 >x : { a: string | number; }
@@= skipped -29, +29 lines =@@

         fail();
 >fail() : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

         x;  // Unreachable
 >x : number
@@= skipped -11, +11 lines =@@

         fail();
 >fail() : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

         x;  // Unreachable
 >x : number
@@= skipped -23, +23 lines =@@

         fail();
 >fail() : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

         x;  // Unreachable
 >x : number
@@= skipped -19, +19 lines =@@

         fail();
 >fail() : never
->fail : (message?: string) => never
+>fail : (message?: string | undefined) => never

         x;  // Unreachable
 >x : number
@@= skipped -72, +72 lines =@@
 >system : any

 	init(data?: T): void;
->init : (data?: T) => void
+>init : (data?: T | undefined) => void
 >data : T | undefined

 	pause(): void;