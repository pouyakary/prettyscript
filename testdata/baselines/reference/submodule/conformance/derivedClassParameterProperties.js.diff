--- old.derivedClassParameterProperties.js
+++ new.derivedClassParameterProperties.js
@@= skipped -98, +98 lines =@@
 //// [derivedClassParameterProperties.js]
 // ordering of super calls in derived constructors matters depending on other class contents
 class Base {
+    x;
 }
 class Derived extends Base {
     constructor(y) {
@@= skipped -8, +9 lines =@@
     }
 }
 class Derived2 extends Base {
+    y;
     constructor(y) {
         var a = 1;
         super();
@@= skipped -7, +8 lines =@@
     }
 }
 class Derived3 extends Base {
+    y;
     constructor(y) {
         super();
         this.y = y;
@@= skipped -7, +8 lines =@@
     }
 }
 class Derived4 extends Base {
+    a = 1;
     constructor(y) {
         var b = 2;
         super();
-        this.a = 1;
     }
 }
 class Derived5 extends Base {
+    a = 1;
     constructor(y) {
         super();
-        this.a = 1;
         var b = 2;
     }
 }
 class Derived6 extends Base {
+    a;
     constructor(y) {
         this.a = 1;
         var b = 2;
@@= skipped -21, +22 lines =@@
     }
 }
 class Derived7 extends Base {
+    a = 1;
+    b;
     constructor(y) {
         this.a = 3;
         this.b = 3;
         super();
-        this.a = 1;
     }
 }
 class Derived8 extends Base {
+    a = 1;
+    b;
     constructor(y) {
         super();
-        this.a = 1;
         this.a = 3;
         this.b = 3;
     }
 }
 // generic cases of Derived7 and Derived8
 class Base2 {
+    x;
 }
 class Derived9 extends Base2 {
+    a = 1;
+    b;
     constructor(y) {
         this.a = 3;
         this.b = 3;
         super();
-        this.a = 1;
     }
 }
 class Derived10 extends Base2 {
+    a = 1;
+    b;
     constructor(y) {
         super();
-        this.a = 1;
         this.a = 3;
         this.b = 3;
     }