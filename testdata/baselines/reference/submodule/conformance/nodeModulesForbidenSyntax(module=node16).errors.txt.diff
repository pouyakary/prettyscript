--- old.nodeModulesForbidenSyntax(module=node16).errors.txt
+++ new.nodeModulesForbidenSyntax(module=node16).errors.txt
@@= skipped -0, +0 lines =@@
 index.cts(2,12): error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-index.cts(2,20): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-index.cts(2,23): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
 index.mts(2,12): error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-index.mts(2,20): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-index.mts(2,23): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
 subfolder/index.cts(2,12): error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-subfolder/index.cts(2,20): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-subfolder/index.cts(2,23): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
 subfolder/index.mts(2,12): error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-subfolder/index.mts(2,20): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-subfolder/index.mts(2,23): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
 subfolder2/another/index.cts(2,12): error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-subfolder2/another/index.cts(2,20): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-subfolder2/another/index.cts(2,23): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
 subfolder2/another/index.mts(2,12): error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-subfolder2/another/index.mts(2,20): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-subfolder2/another/index.mts(2,23): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
 subfolder2/index.cts(2,12): error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-subfolder2/index.cts(2,20): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-subfolder2/index.cts(2,23): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
 subfolder2/index.mts(2,12): error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-subfolder2/index.mts(2,20): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-subfolder2/index.mts(2,23): error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.


 ==== subfolder/index.ts (0 errors) ====
     // cjs format file
     const x = <T>() => <T><any>(void 0);
     export {x};
-==== subfolder/index.cts (3 errors) ====
+==== subfolder/index.cts (1 errors) ====
     // cjs format file
     const x = <T>() => <T><any>(void 0);
                ~
 !!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-                       ~~~~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-                          ~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
     export {x};
-==== subfolder/index.mts (3 errors) ====
+==== subfolder/index.mts (1 errors) ====
     // esm format file
     const x = <T>() => <T><any>(void 0);
                ~
 !!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-                       ~~~~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-                          ~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
     export {x};
 ==== subfolder2/index.ts (0 errors) ====
     // cjs format file
     const x = <T>() => <T><any>(void 0);
     export {x};
-==== subfolder2/index.cts (3 errors) ====
+==== subfolder2/index.cts (1 errors) ====
     // cjs format file
     const x = <T>() => <T><any>(void 0);
                ~
 !!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-                       ~~~~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-                          ~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
     export {x};
-==== subfolder2/index.mts (3 errors) ====
+==== subfolder2/index.mts (1 errors) ====
     // esm format file
     const x = <T>() => <T><any>(void 0);
                ~
 !!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-                       ~~~~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-                          ~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
     export {x};
 ==== subfolder2/another/index.ts (0 errors) ====
     // esm format file
     const x = <T>() => <T><any>(void 0);
     export {x};
-==== subfolder2/another/index.mts (3 errors) ====
-    // esm format file
-    const x = <T>() => <T><any>(void 0);
-               ~
-!!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-                       ~~~~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-                          ~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-    export {x};
-==== subfolder2/another/index.cts (3 errors) ====
-    // cjs format file
-    const x = <T>() => <T><any>(void 0);
-               ~
-!!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-                       ~~~~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-                          ~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-    export {x};
-==== index.mts (3 errors) ====
-    // esm format file
-    const x = <T>() => <T><any>(void 0);
-               ~
-!!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-                       ~~~~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-                          ~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-    export {x};
-==== index.cts (3 errors) ====
-    // cjs format file
-    const x = <T>() => <T><any>(void 0);
-               ~
-!!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
-                       ~~~~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
-                          ~~~~~~~~~~~~~
-!!! error TS7059: This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.
+==== subfolder2/another/index.mts (1 errors) ====
+    // esm format file
+    const x = <T>() => <T><any>(void 0);
+               ~
+!!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
+    export {x};
+==== subfolder2/another/index.cts (1 errors) ====
+    // cjs format file
+    const x = <T>() => <T><any>(void 0);
+               ~
+!!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
+    export {x};
+==== index.mts (1 errors) ====
+    // esm format file
+    const x = <T>() => <T><any>(void 0);
+               ~
+!!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
+    export {x};
+==== index.cts (1 errors) ====
+    // cjs format file
+    const x = <T>() => <T><any>(void 0);
+               ~
+!!! error TS7060: This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint.
     export {x};
 ==== index.ts (0 errors) ====
     // esm format file