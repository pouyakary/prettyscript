--- old.errorSuperPropertyAccess.js
+++ new.errorSuperPropertyAccess.js
@@= skipped -135, +135 lines =@@
 //super property access in instance member accessor(get and set) of class with no base type
 class NoBase {
     constructor() {
-        this.m = super.prototype;
-        this.n = super.hasOwnProperty('');
         var a = super.prototype;
         var b = super.hasOwnProperty('');
     }
@@= skipped -9, +7 lines =@@
         var a = super.prototype;
         var b = super.hasOwnProperty('');
     }
+    m = super.prototype;
+    n = super.hasOwnProperty('');
     //super static property access in static member function of class with no base type
     //super static property access in static member accessor(get and set) of class with no base type
     static static1() {
@@= skipped -13, +15 lines =@@
         super.hasOwnProperty('');
     }
 }
-let SomeBase = (() => {
-    class SomeBase {
-        constructor() {
-            this.privateMember = 0;
-            this.publicMember = 0;
-        }
-        privateFunc() { }
-        publicFunc() { }
-        static privateStaticFunc() { }
-        static publicStaticFunc() { }
-    }
-    SomeBase.privateStaticMember = 0;
-    SomeBase.publicStaticMember = 0;
-    return SomeBase;
-})();
+class SomeBase {
+    privateFunc() { }
+    privateMember = 0;
+    publicFunc() { }
+    publicMember = 0;
+    static privateStaticFunc() { }
+    static privateStaticMember = 0;
+    static publicStaticFunc() { }
+    static publicStaticMember = 0;
+}
 //super.publicInstanceMemberNotFunction in constructor of derived class
 //super.publicInstanceMemberNotFunction in instance member function of derived class
 //super.publicInstanceMemberNotFunction in instance member accessor(get and set) of derived class