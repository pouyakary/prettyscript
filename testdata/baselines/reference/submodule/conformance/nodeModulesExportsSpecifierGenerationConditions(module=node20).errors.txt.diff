--- old.nodeModulesExportsSpecifierGenerationConditions(module=node20).errors.txt
+++ new.nodeModulesExportsSpecifierGenerationConditions(module=node20).errors.txt
@@= skipped -0, +0 lines =@@
+error TS5109: Option 'moduleResolution' must be set to 'Node16' (or left unspecified) when option 'module' is set to 'Node20'.
+error TS2468: Cannot find global value 'Promise'.
 index.ts(2,23): error TS2307: Cannot find module 'inner/other.js' or its corresponding type declarations.
-
-
-==== index.ts (1 errors) ====
+index.ts(3,19): error TS1378: Top-level 'await' expressions are only allowed when the 'module' option is set to 'es2022', 'esnext', 'system', 'node16', 'node18', 'node20', 'nodenext', or 'preserve', and the 'target' option is set to 'es2017' or higher.
+index.ts(3,25): error TS2712: A dynamic import call in ES5 requires the 'Promise' constructor.  Make sure you have a declaration for the 'Promise' constructor or include 'ES2015' in your '--lib' option.
+
+
+!!! error TS5109: Option 'moduleResolution' must be set to 'Node16' (or left unspecified) when option 'module' is set to 'Node20'.
+!!! error TS2468: Cannot find global value 'Promise'.
+==== index.ts (3 errors) ====
     // esm format file
     import { Thing } from "inner/other.js"; // should fail
                           ~~~~~~~~~~~~~~~~
 !!! error TS2307: Cannot find module 'inner/other.js' or its corresponding type declarations.
     export const a = (await import("inner")).x();
+                      ~~~~~
+!!! error TS1378: Top-level 'await' expressions are only allowed when the 'module' option is set to 'es2022', 'esnext', 'system', 'node16', 'node18', 'node20', 'nodenext', or 'preserve', and the 'target' option is set to 'es2017' or higher.
+                            ~~~~~~~~~~~~~~~
+!!! error TS2712: A dynamic import call in ES5 requires the 'Promise' constructor.  Make sure you have a declaration for the 'Promise' constructor or include 'ES2015' in your '--lib' option.
 ==== node_modules/inner/index.d.ts (0 errors) ====
     // esm format file
     export { x } from "./other.js";