--- old.lateBoundAssignmentDeclarationSupport7.symbols
+++ new.lateBoundAssignmentDeclarationSupport7.symbols
@@= skipped -10, +10 lines =@@
 >x.F : Symbol(x.F, Decl(lateBoundAssignmentDeclarationSupport7.js, 6, 15))
 >x : Symbol(x, Decl(usage.js, 0, 5))
 >F : Symbol(x.F, Decl(lateBoundAssignmentDeclarationSupport7.js, 6, 15))
->"my-fake-sym" : Symbol(x.F.F[_str], Decl(lateBoundAssignmentDeclarationSupport7.js, 5, 15))
+>"my-fake-sym" : Symbol(F[F[_str]], Decl(lateBoundAssignmentDeclarationSupport7.js, 5, 15))

 const z = x.F[x.S];
 >z : Symbol(z, Decl(usage.js, 2, 5))
@@= skipped -20, +20 lines =@@
 >_str : Symbol(_str, Decl(lateBoundAssignmentDeclarationSupport7.js, 1, 5))

 function F() {
->F : Symbol(F, Decl(lateBoundAssignmentDeclarationSupport7.js, 1, 27), Decl(lateBoundAssignmentDeclarationSupport7.js, 4, 1), Decl(lateBoundAssignmentDeclarationSupport7.js, 5, 15))
+>F : Symbol(F, Decl(lateBoundAssignmentDeclarationSupport7.js, 1, 27))
 }
 F[_sym] = "ok";
->F : Symbol(F, Decl(lateBoundAssignmentDeclarationSupport7.js, 1, 27), Decl(lateBoundAssignmentDeclarationSupport7.js, 4, 1), Decl(lateBoundAssignmentDeclarationSupport7.js, 5, 15))
+>F : Symbol(F, Decl(lateBoundAssignmentDeclarationSupport7.js, 1, 27))
 >_sym : Symbol(_sym, Decl(lateBoundAssignmentDeclarationSupport7.js, 0, 5))

 F[_str] = "ok";
->F : Symbol(F, Decl(lateBoundAssignmentDeclarationSupport7.js, 1, 27), Decl(lateBoundAssignmentDeclarationSupport7.js, 4, 1), Decl(lateBoundAssignmentDeclarationSupport7.js, 5, 15))
+>F : Symbol(F, Decl(lateBoundAssignmentDeclarationSupport7.js, 1, 27))
 >_str : Symbol(_str, Decl(lateBoundAssignmentDeclarationSupport7.js, 1, 5))

 module.exports.F = F;
 >module.exports.F : Symbol(F, Decl(lateBoundAssignmentDeclarationSupport7.js, 6, 15))
->module.exports : Symbol(F, Decl(lateBoundAssignmentDeclarationSupport7.js, 6, 15))
->module : Symbol(module, Decl(lateBoundAssignmentDeclarationSupport7.js, 6, 15))
->exports : Symbol(module.exports, Decl(lateBoundAssignmentDeclarationSupport7.js, 0, 0))
+>module.exports : Symbol("lateBoundAssignmentDeclarationSupport7", Decl(lateBoundAssignmentDeclarationSupport7.js, 0, 0))
+>module : Symbol(module.exports)
+>exports : Symbol("lateBoundAssignmentDeclarationSupport7", Decl(lateBoundAssignmentDeclarationSupport7.js, 0, 0))
 >F : Symbol(F, Decl(lateBoundAssignmentDeclarationSupport7.js, 6, 15))
->F : Symbol(F, Decl(lateBoundAssignmentDeclarationSupport7.js, 1, 27), Decl(lateBoundAssignmentDeclarationSupport7.js, 4, 1), Decl(lateBoundAssignmentDeclarationSupport7.js, 5, 15))
+>F : Symbol(F, Decl(lateBoundAssignmentDeclarationSupport7.js, 1, 27))

 module.exports.S = _sym;
 >module.exports.S : Symbol(S, Decl(lateBoundAssignmentDeclarationSupport7.js, 7, 21))
->module.exports : Symbol(S, Decl(lateBoundAssignmentDeclarationSupport7.js, 7, 21))
->module : Symbol(module, Decl(lateBoundAssignmentDeclarationSupport7.js, 6, 15))
->exports : Symbol(module.exports, Decl(lateBoundAssignmentDeclarationSupport7.js, 0, 0))
+>module.exports : Symbol("lateBoundAssignmentDeclarationSupport7", Decl(lateBoundAssignmentDeclarationSupport7.js, 0, 0))
+>module : Symbol(module.exports)
+>exports : Symbol("lateBoundAssignmentDeclarationSupport7", Decl(lateBoundAssignmentDeclarationSupport7.js, 0, 0))
 >S : Symbol(S, Decl(lateBoundAssignmentDeclarationSupport7.js, 7, 21))
 >_sym : Symbol(_sym, Decl(lateBoundAssignmentDeclarationSupport7.js, 0, 5))
