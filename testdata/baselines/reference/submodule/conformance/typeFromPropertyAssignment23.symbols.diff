--- old.typeFromPropertyAssignment23.symbols
+++ new.typeFromPropertyAssignment23.symbols
@@= skipped -20, +20 lines =@@

 // this override should be fine (even if it's a little odd)
 C.prototype.foo = function() {
->C.prototype.foo : Symbol(C.foo, Decl(a.js, 8, 21))
->C.prototype : Symbol(C.foo, Decl(a.js, 8, 21))
+>C.prototype.foo : Symbol(B.foo, Decl(a.js, 3, 5))
+>C.prototype : Symbol(C.prototype)
 >C : Symbol(C, Decl(a.js, 6, 1))
 >prototype : Symbol(C.prototype)
->foo : Symbol(C.foo, Decl(a.js, 8, 21))
+>foo : Symbol(B.foo, Decl(a.js, 3, 5))
 }

 class D extends B { }
@@= skipped -12, +12 lines =@@
 >B : Symbol(B, Decl(a.js, 0, 0))

 D.prototype.foo = () =>  {
->D.prototype.foo : Symbol(D.foo, Decl(a.js, 14, 21))
->D.prototype : Symbol(D.foo, Decl(a.js, 14, 21))
+>D.prototype.foo : Symbol(B.foo, Decl(a.js, 3, 5))
+>D.prototype : Symbol(D.prototype)
 >D : Symbol(D, Decl(a.js, 12, 1))
 >prototype : Symbol(D.prototype)
->foo : Symbol(D.foo, Decl(a.js, 14, 21))
+>foo : Symbol(B.foo, Decl(a.js, 3, 5))

     this.n = 'not checked, so no error'
 >this : Symbol(globalThis)
->n : Symbol(n, Decl(a.js, 15, 26))
 }

 // post-class prototype assignments are trying to show that these properties are abstract
@@= skipped -16, +15 lines =@@
 >Module : Symbol(Module, Decl(a.js, 17, 1))
 }
 Module.prototype.identifier = undefined
->Module.prototype.identifier : Symbol(Module.identifier, Decl(a.js, 21, 1))
->Module.prototype : Symbol(Module.identifier, Decl(a.js, 21, 1))
+>Module.prototype : Symbol(Module.prototype)
 >Module : Symbol(Module, Decl(a.js, 17, 1))
 >prototype : Symbol(Module.prototype)
->identifier : Symbol(Module.identifier, Decl(a.js, 21, 1))
 >undefined : Symbol(undefined)

 Module.prototype.size = null
->Module.prototype.size : Symbol(Module.size, Decl(a.js, 22, 39))
->Module.prototype : Symbol(Module.size, Decl(a.js, 22, 39))
+>Module.prototype : Symbol(Module.prototype)
 >Module : Symbol(Module, Decl(a.js, 17, 1))
 >prototype : Symbol(Module.prototype)
->size : Symbol(Module.size, Decl(a.js, 22, 39))

 class NormalModule extends Module {
 >NormalModule : Symbol(NormalModule, Decl(a.js, 23, 28))