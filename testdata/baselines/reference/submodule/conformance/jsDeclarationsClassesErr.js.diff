--- old.jsDeclarationsClassesErr.js
+++ new.jsDeclarationsClassesErr.js
@@= skipped -73, +73 lines =@@

 //// [index.js]
 "use strict";
-// Pretty much all of this should be an error, (since index signatures and generics are forbidden in js),
-// but we should be able to synthesize declarations from the symbols regardless
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.CC = exports.BB = exports.AA = exports.Z = exports.Y = exports.X = exports.W = exports.V = exports.U = exports.T = exports.S = exports.R = exports.Q = exports.P = exports.O = exports.N = exports.M = void 0;
+// Pretty much all of this should be an error, (since index signatures and generics are forbidden in js),
+// but we should be able to synthesize declarations from the symbols regardless
 class M {
+    field;
 }
 exports.M = M;
 class N extends M {
+    other;
 }
 exports.N = N;
 class O {
@@= skipped -58, +60 lines =@@


 //// [index.d.ts]
-export class M<T> {
+export declare class M<T> {
     field: T;
 }
-export class N<U> extends M<U> {
+export declare class N<U> extends M<U> {
     other: U;
 }
-export class O {
+export declare class O {
     [idx: string]: string;
 }
-export class P extends O {
+export declare class P extends O {
 }
-export class Q extends O {
+export declare class Q extends O {
     [idx: string]: "ok";
 }
-export class R extends O {
+export declare class R extends O {
     [idx: number]: "ok";
 }
-export class S extends O {
+export declare class S extends O {
     [idx: string]: "ok";
     [idx: number]: never;
 }
-export class T {
+export declare class T {
     [idx: number]: string;
 }
-export class U extends T {
-}
-export class V extends T {
-    [idx: string]: string;
-}
-export class W extends T {
-    [idx: number]: "ok";
-}
-export class X extends T {
-    [idx: string]: string;
-    [idx: number]: "ok";
-}
-export class Y {
+export declare class U extends T {
+}
+export declare class V extends T {
+    [idx: string]: string;
+}
+export declare class W extends T {
+    [idx: number]: "ok";
+}
+export declare class X extends T {
+    [idx: string]: string;
+    [idx: number]: "ok";
+}
+export declare class Y {
     [idx: string]: {
         x: number;
     };
@@= skipped -45, +45 lines =@@
         y: number;
     };
 }
-export class Z extends Y {
+export declare class Z extends Y {
 }
-export class AA extends Y {
+export declare class AA extends Y {
     [idx: string]: {
         x: number;
         y: number;
     };
 }
-export class BB extends Y {
+export declare class BB extends Y {
     [idx: number]: {
         x: 0;
         y: 0;
     };
 }
-export class CC extends Y {
+export declare class CC extends Y {
     [idx: string]: {
         x: number;
         y: number;