--- old.staticPropertyNameConflicts(usedefineforclassfields=true).js
+++ new.staticPropertyNameConflicts(usedefineforclassfields=true).js
@@= skipped -351, +351 lines =@@

 //// [staticPropertyNameConflicts.js]
 "use strict";
-var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10;
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ExportedStaticArgumentsFn = exports.ExportedStaticArguments = exports.ExportedStaticCallerFn = exports.ExportedStaticCaller = exports.ExportedStaticPrototypeFn = exports.ExportedStaticPrototype = exports.ExportedStaticLengthFn = exports.ExportedStaticLength = exports.ExportedStaticNameFn = exports.ExportedStaticName = void 0;
 const FunctionPropertyNames = {
@@= skipped -12, +11 lines =@@
 };
 // name
 class StaticName {
-    constructor() {
-        Object.defineProperty(this, "name", {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static name; // error without useDefineForClassFields
+    name; // ok
 }
 class StaticName2 {
-    constructor() {
-        Object.defineProperty(this, _b, {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static [FunctionPropertyNames.name]; // error without useDefineForClassFields
+    [FunctionPropertyNames.name]; // ok
 }
-_a = FunctionPropertyNames.name, _b = FunctionPropertyNames.name;
 class StaticNameFn {
     static name() { } // error without useDefineForClassFields
     name() { } // ok
@@= skipped -30, +17 lines =@@
 }
 // length
 class StaticLength {
-    constructor() {
-        Object.defineProperty(this, "length", {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static length; // error without useDefineForClassFields
+    length; // ok
 }
 class StaticLength2 {
-    constructor() {
-        Object.defineProperty(this, _d, {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static [FunctionPropertyNames.length]; // error without useDefineForClassFields
+    [FunctionPropertyNames.length]; // ok
 }
-_c = FunctionPropertyNames.length, _d = FunctionPropertyNames.length;
 class StaticLengthFn {
     static length() { } // error without useDefineForClassFields
     length() { } // ok
@@= skipped -30, +17 lines =@@
 }
 // prototype
 class StaticPrototype {
-    constructor() {
-        Object.defineProperty(this, "prototype", {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static prototype; // always an error
+    prototype; // ok
 }
 class StaticPrototype2 {
-    constructor() {
-        Object.defineProperty(this, _f, {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static [FunctionPropertyNames.prototype]; // always an error
+    [FunctionPropertyNames.prototype]; // ok
 }
-_e = FunctionPropertyNames.prototype, _f = FunctionPropertyNames.prototype;
 class StaticPrototypeFn {
     static prototype() { } // always an error
     prototype() { } // ok
@@= skipped -30, +17 lines =@@
 }
 // caller
 class StaticCaller {
-    constructor() {
-        Object.defineProperty(this, "caller", {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static caller; // error without useDefineForClassFields
+    caller; // ok
 }
 class StaticCaller2 {
-    constructor() {
-        Object.defineProperty(this, _h, {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static [FunctionPropertyNames.caller]; // error without useDefineForClassFields
+    [FunctionPropertyNames.caller]; // ok
 }
-_g = FunctionPropertyNames.caller, _h = FunctionPropertyNames.caller;
 class StaticCallerFn {
     static caller() { } // error without useDefineForClassFields
     caller() { } // ok
@@= skipped -30, +17 lines =@@
 }
 // arguments
 class StaticArguments {
-    constructor() {
-        Object.defineProperty(this, "arguments", {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static arguments; // error without useDefineForClassFields
+    arguments; // ok
 }
 class StaticArguments2 {
-    constructor() {
-        Object.defineProperty(this, _k, {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static [FunctionPropertyNames.arguments]; // error without useDefineForClassFields
+    [FunctionPropertyNames.arguments]; // ok
 }
-_j = FunctionPropertyNames.arguments, _k = FunctionPropertyNames.arguments;
 class StaticArgumentsFn {
     static arguments() { } // error without useDefineForClassFields
     arguments() { } // ok
@@= skipped -31, +18 lines =@@
 // === Static properties on anonymous classes ===
 // name
 var StaticName_Anonymous = class {
-    constructor() {
-        Object.defineProperty(this, "name", {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
-};
-var StaticName_Anonymous2 = (_o = class {
-        constructor() {
-            Object.defineProperty(this, _m, {
-                enumerable: true,
-                configurable: true,
-                writable: true,
-                value: void 0
-            }); // ok
-        }
-    },
-    _l = FunctionPropertyNames.name,
-    _m = FunctionPropertyNames.name,
-    _o);
+    static name; // error without useDefineForClassFields
+    name; // ok
+};
+var StaticName_Anonymous2 = class {
+    static [FunctionPropertyNames.name]; // error without useDefineForClassFields
+    [FunctionPropertyNames.name]; // ok
+};
 var StaticNameFn_Anonymous = class {
     static name() { } // error without useDefineForClassFields
     name() { } // ok
@@= skipped -32, +17 lines =@@
 };
 // length
 var StaticLength_Anonymous = class {
-    constructor() {
-        Object.defineProperty(this, "length", {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
-};
-var StaticLength_Anonymous2 = (_r = class {
-        constructor() {
-            Object.defineProperty(this, _q, {
-                enumerable: true,
-                configurable: true,
-                writable: true,
-                value: void 0
-            }); // ok
-        }
-    },
-    _p = FunctionPropertyNames.length,
-    _q = FunctionPropertyNames.length,
-    _r);
+    static length; // error without useDefineForClassFields
+    length; // ok
+};
+var StaticLength_Anonymous2 = class {
+    static [FunctionPropertyNames.length]; // error without useDefineForClassFields
+    [FunctionPropertyNames.length]; // ok
+};
 var StaticLengthFn_Anonymous = class {
     static length() { } // error without useDefineForClassFields
     length() { } // ok
@@= skipped -32, +17 lines =@@
 };
 // prototype
 var StaticPrototype_Anonymous = class {
-    constructor() {
-        Object.defineProperty(this, "prototype", {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
-};
-var StaticPrototype_Anonymous2 = (_u = class {
-        constructor() {
-            Object.defineProperty(this, _t, {
-                enumerable: true,
-                configurable: true,
-                writable: true,
-                value: void 0
-            }); // ok
-        }
-    },
-    _s = FunctionPropertyNames.prototype,
-    _t = FunctionPropertyNames.prototype,
-    _u);
+    static prototype; // always an error
+    prototype; // ok
+};
+var StaticPrototype_Anonymous2 = class {
+    static [FunctionPropertyNames.prototype]; // always an error
+    [FunctionPropertyNames.prototype]; // ok
+};
 var StaticPrototypeFn_Anonymous = class {
     static prototype() { } // always an error
     prototype() { } // ok
@@= skipped -32, +17 lines =@@
 };
 // caller
 var StaticCaller_Anonymous = class {
-    constructor() {
-        Object.defineProperty(this, "caller", {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
-};
-var StaticCaller_Anonymous2 = (_x = class {
-        constructor() {
-            Object.defineProperty(this, _w, {
-                enumerable: true,
-                configurable: true,
-                writable: true,
-                value: void 0
-            }); // ok
-        }
-    },
-    _v = FunctionPropertyNames.caller,
-    _w = FunctionPropertyNames.caller,
-    _x);
+    static caller; // error without useDefineForClassFields
+    caller; // ok
+};
+var StaticCaller_Anonymous2 = class {
+    static [FunctionPropertyNames.caller]; // error without useDefineForClassFields
+    [FunctionPropertyNames.caller]; // ok
+};
 var StaticCallerFn_Anonymous = class {
     static caller() { } // error without useDefineForClassFields
     caller() { } // ok
@@= skipped -32, +17 lines =@@
 };
 // arguments
 var StaticArguments_Anonymous = class {
-    constructor() {
-        Object.defineProperty(this, "arguments", {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
-};
-var StaticArguments_Anonymous2 = (_0 = class {
-        constructor() {
-            Object.defineProperty(this, _z, {
-                enumerable: true,
-                configurable: true,
-                writable: true,
-                value: void 0
-            }); // ok
-        }
-    },
-    _y = FunctionPropertyNames.arguments,
-    _z = FunctionPropertyNames.arguments,
-    _0);
+    static arguments; // error without useDefineForClassFields
+    arguments; // ok
+};
+var StaticArguments_Anonymous2 = class {
+    static [FunctionPropertyNames.arguments]; // error without useDefineForClassFields
+    [FunctionPropertyNames.arguments]; // ok
+};
 var StaticArgumentsFn_Anonymous = class {
     static arguments() { } // error without useDefineForClassFields
     arguments() { } // ok
@@= skipped -35, +20 lines =@@
 var TestOnDefaultExportedClass_1;
 (function (TestOnDefaultExportedClass_1) {
     class StaticName {
-        constructor() {
-            Object.defineProperty(this, "name", {
-                enumerable: true,
-                configurable: true,
-                writable: true,
-                value: void 0
-            }); // ok
-        }
+        static name; // error without useDefineForClassFields
+        name; // ok
     }
 })(TestOnDefaultExportedClass_1 || (TestOnDefaultExportedClass_1 = {}));
 class ExportedStaticName {
-    constructor() {
-        Object.defineProperty(this, _2, {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static [FunctionPropertyNames.name]; // error without useDefineForClassFields
+    [FunctionPropertyNames.name]; // ok
 }
 exports.ExportedStaticName = ExportedStaticName;
-_1 = FunctionPropertyNames.name, _2 = FunctionPropertyNames.name;
 var TestOnDefaultExportedClass_2;
 (function (TestOnDefaultExportedClass_2) {
     class StaticNameFn {
@@= skipped -38, +25 lines =@@
 var TestOnDefaultExportedClass_3;
 (function (TestOnDefaultExportedClass_3) {
     class StaticLength {
-        constructor() {
-            Object.defineProperty(this, "length", {
-                enumerable: true,
-                configurable: true,
-                writable: true,
-                value: void 0
-            }); // ok
-        }
+        static length; // error without useDefineForClassFields
+        length; // ok
     }
     TestOnDefaultExportedClass_3.StaticLength = StaticLength;
 })(TestOnDefaultExportedClass_3 || (TestOnDefaultExportedClass_3 = {}));
 class ExportedStaticLength {
-    constructor() {
-        Object.defineProperty(this, _4, {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static [FunctionPropertyNames.length]; // error without useDefineForClassFields
+    [FunctionPropertyNames.length]; // ok
 }
 exports.ExportedStaticLength = ExportedStaticLength;
-_3 = FunctionPropertyNames.length, _4 = FunctionPropertyNames.length;
 var TestOnDefaultExportedClass_4;
 (function (TestOnDefaultExportedClass_4) {
     class StaticLengthFn {
@@= skipped -40, +27 lines =@@
 var TestOnDefaultExportedClass_5;
 (function (TestOnDefaultExportedClass_5) {
     class StaticPrototype {
-        constructor() {
-            Object.defineProperty(this, "prototype", {
-                enumerable: true,
-                configurable: true,
-                writable: true,
-                value: void 0
-            }); // ok
-        }
+        static prototype; // always an error
+        prototype; // ok
     }
     TestOnDefaultExportedClass_5.StaticPrototype = StaticPrototype;
 })(TestOnDefaultExportedClass_5 || (TestOnDefaultExportedClass_5 = {}));
 class ExportedStaticPrototype {
-    constructor() {
-        Object.defineProperty(this, _6, {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static [FunctionPropertyNames.prototype]; // always an error
+    [FunctionPropertyNames.prototype]; // ok
 }
 exports.ExportedStaticPrototype = ExportedStaticPrototype;
-_5 = FunctionPropertyNames.prototype, _6 = FunctionPropertyNames.prototype;
 var TestOnDefaultExportedClass_6;
 (function (TestOnDefaultExportedClass_6) {
     class StaticPrototypeFn {
@@= skipped -40, +27 lines =@@
 var TestOnDefaultExportedClass_7;
 (function (TestOnDefaultExportedClass_7) {
     class StaticCaller {
-        constructor() {
-            Object.defineProperty(this, "caller", {
-                enumerable: true,
-                configurable: true,
-                writable: true,
-                value: void 0
-            }); // ok
-        }
+        static caller; // error without useDefineForClassFields
+        caller; // ok
     }
     TestOnDefaultExportedClass_7.StaticCaller = StaticCaller;
 })(TestOnDefaultExportedClass_7 || (TestOnDefaultExportedClass_7 = {}));
 class ExportedStaticCaller {
-    constructor() {
-        Object.defineProperty(this, _8, {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static [FunctionPropertyNames.caller]; // error without useDefineForClassFields
+    [FunctionPropertyNames.caller]; // ok
 }
 exports.ExportedStaticCaller = ExportedStaticCaller;
-_7 = FunctionPropertyNames.caller, _8 = FunctionPropertyNames.caller;
 var TestOnDefaultExportedClass_8;
 (function (TestOnDefaultExportedClass_8) {
     class StaticCallerFn {
@@= skipped -40, +27 lines =@@
 var TestOnDefaultExportedClass_9;
 (function (TestOnDefaultExportedClass_9) {
     class StaticArguments {
-        constructor() {
-            Object.defineProperty(this, "arguments", {
-                enumerable: true,
-                configurable: true,
-                writable: true,
-                value: void 0
-            }); // ok
-        }
+        static arguments; // error without useDefineForClassFields
+        arguments; // ok
     }
     TestOnDefaultExportedClass_9.StaticArguments = StaticArguments;
 })(TestOnDefaultExportedClass_9 || (TestOnDefaultExportedClass_9 = {}));
 class ExportedStaticArguments {
-    constructor() {
-        Object.defineProperty(this, _10, {
-            enumerable: true,
-            configurable: true,
-            writable: true,
-            value: void 0
-        }); // ok
-    }
+    static [FunctionPropertyNames.arguments]; // error without useDefineForClassFields
+    [FunctionPropertyNames.arguments]; // ok
 }
 exports.ExportedStaticArguments = ExportedStaticArguments;
-_9 = FunctionPropertyNames.arguments, _10 = FunctionPropertyNames.arguments;
 var TestOnDefaultExportedClass_10;
 (function (TestOnDefaultExportedClass_10) {
     class StaticArgumentsFn {