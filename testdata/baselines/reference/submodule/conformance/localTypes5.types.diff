--- old.localTypes5.types
+++ new.localTypes5.types
@@= skipped -1, +1 lines =@@

 === localTypes5.ts ===
 function foo<A>() {
->foo : <A>() => X.m<number, boolean>.(Anonymous function)<Date>.Y<string>
+>foo : <A>() => X.m.(Anonymous function).Y<string>

     class X {
 >X : X

         m<B, C>() {
->m : <B, C>() => (Anonymous function)<Date>.Y<string>
+>m : <B, C>() => (Anonymous function).Y<string>

             return (function <D>() {
->(function <D>() {                class Y<E> {                }                return new Y<string>();            })<Date>() : (Anonymous function)<Date>.Y<string>
+>(function <D>() {                class Y<E> {                }                return new Y<string>();            })<Date>() : (Anonymous function).Y<string>
 >(function <D>() {                class Y<E> {                }                return new Y<string>();            }) : <D>() => Y<string>
 >function <D>() {                class Y<E> {                }                return new Y<string>();            } : <D>() => Y<string>

@@= skipped -29, +29 lines =@@
 >X : typeof X

     return x.m<number, boolean>();
->x.m<number, boolean>() : X.m<number, boolean>.(Anonymous function)<Date>.Y<string>
->x.m : <B, C>() => X.m<B, C>.(Anonymous function)<Date>.Y<string>
+>x.m<number, boolean>() : X.m.(Anonymous function).Y<string>
+>x.m : <B, C>() => X.m.(Anonymous function).Y<string>
 >x : X
->m : <B, C>() => X.m<B, C>.(Anonymous function)<Date>.Y<string>
+>m : <B, C>() => X.m.(Anonymous function).Y<string>
 }
 var x = foo<void>();
->x : foo<void>.X.m<number, boolean>.(Anonymous function)<Date>.Y<string>
->foo<void>() : foo<void>.X.m<number, boolean>.(Anonymous function)<Date>.Y<string>
->foo : <A>() => X.m<number, boolean>.(Anonymous function)<Date>.Y<string>
+>x : foo.X.m.(Anonymous function).Y<string>
+>foo<void>() : foo.X.m.(Anonymous function).Y<string>
+>foo : <A>() => X.m.(Anonymous function).Y<string>
