--- old.extendsClause.symbols
+++ new.extendsClause.symbols
@@= skipped -31, +31 lines =@@

 interface S extends types.C {}
 >S : Symbol(S, Decl(index.ts, 4, 24))
->types.C : Symbol(types.C, Decl(types.ts, 0, 21))
+>types.C : Symbol(C, Decl(types.ts, 0, 21))
 >types : Symbol(types, Decl(index.ts, 0, 8))
->C : Symbol(types.C, Decl(types.ts, 0, 21))
+>C : Symbol(C, Decl(types.ts, 0, 21))

 interface T extends types.I {}
 >T : Symbol(T, Decl(index.ts, 5, 30))
->types.I : Symbol(types.I, Decl(types.ts, 0, 0))
+>types.I : Symbol(I, Decl(types.ts, 0, 0))
 >types : Symbol(types, Decl(index.ts, 0, 8))
->I : Symbol(types.I, Decl(types.ts, 0, 0))
+>I : Symbol(I, Decl(types.ts, 0, 0))

 class U extends C {} // Error
 >U : Symbol(U, Decl(index.ts, 6, 30))
@@= skipped -16, +16 lines =@@

 class V extends types.C {} // Error
 >V : Symbol(V, Decl(index.ts, 8, 20))
->types.C : Symbol(types.C, Decl(types.ts, 0, 21))
+>types.C : Symbol(C, Decl(types.ts, 0, 21))
 >types : Symbol(types, Decl(index.ts, 0, 8))
->C : Symbol(types.C, Decl(types.ts, 0, 21))
+>C : Symbol(C, Decl(types.ts, 0, 21))
