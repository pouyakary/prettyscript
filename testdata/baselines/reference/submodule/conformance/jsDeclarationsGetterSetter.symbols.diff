--- old.jsDeclarationsGetterSetter.symbols
+++ new.jsDeclarationsGetterSetter.symbols
@@= skipped -46, +46 lines =@@
 >D.prototype : Symbol(D.prototype)
 >D : Symbol(D, Decl(index.js, 20, 1))
 >prototype : Symbol(D.prototype)
->"x" : Symbol(D.x, Decl(index.js, 22, 17))

     get() {
 >get : Symbol(get, Decl(index.js, 23, 41))
@@= skipped -19, +18 lines =@@
 >E.prototype : Symbol(E.prototype)
 >E : Symbol(E, Decl(index.js, 27, 3))
 >prototype : Symbol(E.prototype)
->"x" : Symbol(E.x, Decl(index.js, 29, 17))

     /**
      * @param {number} _arg
@@= skipped -21, +20 lines =@@
 >F.prototype : Symbol(F.prototype)
 >F : Symbol(F, Decl(index.js, 35, 3))
 >prototype : Symbol(F.prototype)
->"x" : Symbol(F.x, Decl(index.js, 37, 17))

     get() {
 >get : Symbol(get, Decl(index.js, 38, 41))
@@= skipped -26, +25 lines =@@
 >G.prototype : Symbol(G.prototype)
 >G : Symbol(G, Decl(index.js, 46, 3))
 >prototype : Symbol(G.prototype)
->"x" : Symbol(G.x, Decl(index.js, 48, 17))

     /**
      * @param {number[]} args
@@= skipped -21, +20 lines =@@
 >H.prototype : Symbol(H.prototype)
 >H : Symbol(H, Decl(index.js, 54, 3))
 >prototype : Symbol(H.prototype)
->"x" : Symbol(H.x, Decl(index.js, 56, 17))

     set() {}
 >set : Symbol(set, Decl(index.js, 57, 41))
@@= skipped -18, +17 lines =@@
 >I.prototype : Symbol(I.prototype)
 >I : Symbol(I, Decl(index.js, 59, 3))
 >prototype : Symbol(I.prototype)
->"x" : Symbol(I.x, Decl(index.js, 62, 17))

     /**
      * @param {number} v
@@= skipped -28, +27 lines =@@
 >J.prototype : Symbol(J.prototype)
 >J : Symbol(J, Decl(index.js, 73, 25))
 >prototype : Symbol(J.prototype)
->"x" : Symbol(J.x, Decl(index.js, 74, 17))

     set: jSetter
 >set : Symbol(set, Decl(index.js, 75, 41))
@@= skipped -32, +31 lines =@@
 >K.prototype : Symbol(K.prototype)
 >K : Symbol(K, Decl(index.js, 86, 26))
 >prototype : Symbol(K.prototype)
->"x" : Symbol(K.x, Decl(index.js, 87, 17))

     set: Math.random() ? kSetter1 : kSetter2
 >set : Symbol(set, Decl(index.js, 88, 41))
@@= skipped -36, +35 lines =@@
 >L.prototype : Symbol(L.prototype)
 >L : Symbol(L, Decl(index.js, 99, 26))
 >prototype : Symbol(L.prototype)
->"x" : Symbol(L.x, Decl(index.js, 100, 17))

     set: Math.random() ? lSetter1 : lSetter2
 >set : Symbol(set, Decl(index.js, 101, 41))
@@= skipped -36, +35 lines =@@
 >M.prototype : Symbol(M.prototype)
 >M : Symbol(M, Decl(index.js, 112, 26))
 >prototype : Symbol(M.prototype)
->"x" : Symbol(M.x, Decl(index.js, 113, 17))

     set: Math.random() ? mSetter1 : mSetter2
 >set : Symbol(set, Decl(index.js, 114, 41))