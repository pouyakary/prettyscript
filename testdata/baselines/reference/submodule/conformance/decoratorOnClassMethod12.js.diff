--- old.decoratorOnClassMethod12.js
+++ new.decoratorOnClassMethod12.js
@@= skipped -11, +11 lines =@@
 }

 //// [decoratorOnClassMethod12.js]
-var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
-    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
-    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
-    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
-    return c > 3 && r && Object.defineProperty(target, key, r), r;
-};
 var M;
 (function (M) {
     class S {
         decorator(target, key) { }
     }
-    let C = (() => {
-        class C extends S {
-            method() { }
-        }
-        __decorate([
-            (super.decorator)
-        ], C.prototype, "method", null);
-        return C;
-    })();
+    class C extends S {
+        @(super.decorator)
+        method() { }
+    }
 })(M || (M = {}));