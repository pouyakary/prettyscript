//// [tests/cases/conformance/jsdoc/jsdocTypeReferenceToMergedClass.ts] ////

=== jsdocTypeReferenceToMergedClass.js ===
var Workspace = {}
>Workspace : Symbol(Workspace, Decl(jsdocTypeReferenceToMergedClass.js, 0, 3))

/** @type {Workspace.Project} */
var p;
>p : Symbol(p, Decl(jsdocTypeReferenceToMergedClass.js, 2, 3))

p.isServiceProject()
>p : Symbol(p, Decl(jsdocTypeReferenceToMergedClass.js, 2, 3))

Workspace.Project = function wp() { }
>Workspace.Project : Symbol(Project, Decl(jsdocTypeReferenceToMergedClass.js, 3, 20))
>Workspace : Symbol(Workspace, Decl(jsdocTypeReferenceToMergedClass.js, 0, 3))
>Project : Symbol(Project, Decl(jsdocTypeReferenceToMergedClass.js, 3, 20))
>wp : Symbol(wp, Decl(jsdocTypeReferenceToMergedClass.js, 5, 19))

Workspace.Project.prototype = {
>Workspace.Project.prototype : Symbol(wp.prototype, Decl(jsdocTypeReferenceToMergedClass.js, 5, 37))
>Workspace.Project : Symbol(Project, Decl(jsdocTypeReferenceToMergedClass.js, 3, 20))
>Workspace : Symbol(Workspace, Decl(jsdocTypeReferenceToMergedClass.js, 0, 3))
>Project : Symbol(Project, Decl(jsdocTypeReferenceToMergedClass.js, 3, 20))
>prototype : Symbol(wp.prototype, Decl(jsdocTypeReferenceToMergedClass.js, 5, 37))

  isServiceProject() {}
>isServiceProject : Symbol(isServiceProject, Decl(jsdocTypeReferenceToMergedClass.js, 6, 31))
}

