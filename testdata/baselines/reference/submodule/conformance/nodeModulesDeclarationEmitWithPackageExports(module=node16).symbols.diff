--- old.nodeModulesDeclarationEmitWithPackageExports(module=node16).symbols
+++ new.nodeModulesDeclarationEmitWithPackageExports(module=node16).symbols
@@= skipped -11, +11 lines =@@
 >type : Symbol(type, Decl(index.ts, 3, 6))

 export const a = cjs;
->a : Symbol(type.a, Decl(index.ts, 4, 12))
+>a : Symbol(a, Decl(index.ts, 4, 12))
 >cjs : Symbol(cjs, Decl(index.ts, 1, 6))

 export const b = mjs;
->b : Symbol(type.b, Decl(index.ts, 5, 12))
+>b : Symbol(b, Decl(index.ts, 5, 12))
 >mjs : Symbol(mjs, Decl(index.ts, 2, 6))

 export const c = type;
->c : Symbol(type.c, Decl(index.ts, 6, 12))
+>c : Symbol(c, Decl(index.ts, 6, 12))
 >type : Symbol(type, Decl(index.ts, 3, 6))

 import * as cjsi from "inner/cjs";
@@= skipped -21, +21 lines =@@
 >typei : Symbol(typei, Decl(index.ts, 9, 6))

 export const d = cjsi;
->d : Symbol(type.d, Decl(index.ts, 10, 12))
+>d : Symbol(d, Decl(index.ts, 10, 12))
 >cjsi : Symbol(cjsi, Decl(index.ts, 7, 6))

 export const e = mjsi;
->e : Symbol(type.e, Decl(index.ts, 11, 12))
+>e : Symbol(e, Decl(index.ts, 11, 12))
 >mjsi : Symbol(mjsi, Decl(index.ts, 8, 6))

 export const f = typei;
->f : Symbol(type.f, Decl(index.ts, 12, 12))
+>f : Symbol(f, Decl(index.ts, 12, 12))
 >typei : Symbol(typei, Decl(index.ts, 9, 6))

 === index.mts ===
@@= skipped -23, +23 lines =@@
 >type : Symbol(type, Decl(index.mts, 3, 6))

 export const a = cjs;
->a : Symbol(mjs.a, Decl(index.mts, 4, 12))
+>a : Symbol(a, Decl(index.mts, 4, 12))
 >cjs : Symbol(cjs, Decl(index.mts, 1, 6))

 export const b = mjs;
->b : Symbol(mjs.b, Decl(index.mts, 5, 12))
+>b : Symbol(b, Decl(index.mts, 5, 12))
 >mjs : Symbol(mjs, Decl(index.mts, 2, 6))

 export const c = type;
->c : Symbol(mjs.c, Decl(index.mts, 6, 12))
+>c : Symbol(c, Decl(index.mts, 6, 12))
 >type : Symbol(type, Decl(index.mts, 3, 6))

 import * as cjsi from "inner/cjs";
@@= skipped -21, +21 lines =@@
 >typei : Symbol(typei, Decl(index.mts, 9, 6))

 export const d = cjsi;
->d : Symbol(mjs.d, Decl(index.mts, 10, 12))
+>d : Symbol(d, Decl(index.mts, 10, 12))
 >cjsi : Symbol(cjsi, Decl(index.mts, 7, 6))

 export const e = mjsi;
->e : Symbol(mjs.e, Decl(index.mts, 11, 12))
+>e : Symbol(e, Decl(index.mts, 11, 12))
 >mjsi : Symbol(mjsi, Decl(index.mts, 8, 6))

 export const f = typei;
->f : Symbol(mjs.f, Decl(index.mts, 12, 12))
+>f : Symbol(f, Decl(index.mts, 12, 12))
 >typei : Symbol(typei, Decl(index.mts, 9, 6))

 === index.cts ===
@@= skipped -23, +23 lines =@@
 >type : Symbol(type, Decl(index.cts, 3, 6))

 export const a = cjs;
->a : Symbol(cjs.a, Decl(index.cts, 4, 12))
+>a : Symbol(a, Decl(index.cts, 4, 12))
 >cjs : Symbol(cjs, Decl(index.cts, 1, 6))

 export const b = mjs;
->b : Symbol(cjs.b, Decl(index.cts, 5, 12))
+>b : Symbol(b, Decl(index.cts, 5, 12))
 >mjs : Symbol(mjs, Decl(index.cts, 2, 6))

 export const c = type;
->c : Symbol(cjs.c, Decl(index.cts, 6, 12))
+>c : Symbol(c, Decl(index.cts, 6, 12))
 >type : Symbol(type, Decl(index.cts, 3, 6))

 import * as cjsi from "inner/cjs";
@@= skipped -21, +21 lines =@@
 >typei : Symbol(typei, Decl(index.cts, 9, 6))

 export const d = cjsi;
->d : Symbol(cjs.d, Decl(index.cts, 10, 12))
+>d : Symbol(d, Decl(index.cts, 10, 12))
 >cjsi : Symbol(cjsi, Decl(index.cts, 7, 6))

 export const e = mjsi;
->e : Symbol(cjs.e, Decl(index.cts, 11, 12))
+>e : Symbol(e, Decl(index.cts, 11, 12))
 >mjsi : Symbol(mjsi, Decl(index.cts, 8, 6))

 export const f = typei;
->f : Symbol(cjs.f, Decl(index.cts, 12, 12))
+>f : Symbol(f, Decl(index.cts, 12, 12))
 >typei : Symbol(typei, Decl(index.cts, 9, 6))

 === node_modules/inner/index.d.ts ===
@@= skipped -32, +32 lines =@@
 >type : Symbol(type, Decl(index.d.ts, 3, 6))

 export const cjsMain = true;
->cjsMain : Symbol(type.cjsMain, Decl(index.d.ts, 7, 12))
+>cjsMain : Symbol(cjsMain, Decl(index.d.ts, 7, 12))

 === node_modules/inner/index.d.mts ===
 // esm format file
@@= skipped -23, +23 lines =@@
 >type : Symbol(type, Decl(index.d.mts, 3, 6))

 export const esm = true;
->esm : Symbol(mjs.esm, Decl(index.d.mts, 7, 12))
+>esm : Symbol(esm, Decl(index.d.mts, 7, 12))

 === node_modules/inner/index.d.cts ===
 // cjs format file
@@= skipped -23, +23 lines =@@
 >type : Symbol(type, Decl(index.d.cts, 3, 6))

 export const cjsNonmain = true;
->cjsNonmain : Symbol(cjs.cjsNonmain, Decl(index.d.cts, 7, 12))
+>cjsNonmain : Symbol(cjsNonmain, Decl(index.d.cts, 7, 12))
