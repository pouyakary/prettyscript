--- old.resolutionModeTypeOnlyImport1(moduleresolution=classic).types
+++ new.resolutionModeTypeOnlyImport1(moduleresolution=classic).types
@@= skipped -9, +9 lines =@@

 === /app.ts ===
 import type { x as Default } from "foo";
->x : any
+>x : "module"
 >Default : any

 import type { x as Import } from "foo" assert { "resolution-mode": "import" };
->x : any
+>x : "module"
 >Import : any

 import type { x as Require } from "foo" assert { "resolution-mode": "require" };
->x : any
+>x : "script"
 >Require : any

 type _Default = typeof Default;
->_Default : any
->Default : any
+>_Default : "module"
+>Default : "module"

 type _Import = typeof Import;
->_Import : any
->Import : any
+>_Import : "module"
+>Import : "module"

 type _Require = typeof Require;
->_Require : any
->Require : any
+>_Require : "script"
+>Require : "script"

 // resolution-mode does not enforce file extension in `bundler`, just sets conditions
 import type { x as ImportRelative } from "./other" assert { "resolution-mode": "import" };