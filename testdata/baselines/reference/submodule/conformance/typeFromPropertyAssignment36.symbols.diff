--- old.typeFromPropertyAssignment36.symbols
+++ new.typeFromPropertyAssignment36.symbols
@@= skipped -88, +88 lines =@@
 >s : Symbol(d.s, Decl(typeFromPropertyAssignment36.ts, 25, 12))

 function d() {
->d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20), Decl(typeFromPropertyAssignment36.ts, 34, 1))
+>d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20))
 }
 d.e = 12
 >d.e : Symbol(d.e, Decl(typeFromPropertyAssignment36.ts, 34, 1))
->d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20), Decl(typeFromPropertyAssignment36.ts, 34, 1))
+>d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20))
 >e : Symbol(d.e, Decl(typeFromPropertyAssignment36.ts, 34, 1))

 d.e
 >d.e : Symbol(d.e, Decl(typeFromPropertyAssignment36.ts, 34, 1))
->d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20), Decl(typeFromPropertyAssignment36.ts, 34, 1))
+>d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20))
 >e : Symbol(d.e, Decl(typeFromPropertyAssignment36.ts, 34, 1))

 if (!!false) {
     d.q = false
 >d.q : Symbol(d.q, Decl(typeFromPropertyAssignment36.ts, 38, 14), Decl(typeFromPropertyAssignment36.ts, 42, 14), Decl(typeFromPropertyAssignment36.ts, 45, 6))
->d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20), Decl(typeFromPropertyAssignment36.ts, 34, 1))
+>d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20))
 >q : Symbol(d.q, Decl(typeFromPropertyAssignment36.ts, 38, 14), Decl(typeFromPropertyAssignment36.ts, 42, 14), Decl(typeFromPropertyAssignment36.ts, 45, 6))
 }
 d.q
 >d.q : Symbol(d.q, Decl(typeFromPropertyAssignment36.ts, 38, 14), Decl(typeFromPropertyAssignment36.ts, 42, 14), Decl(typeFromPropertyAssignment36.ts, 45, 6))
->d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20), Decl(typeFromPropertyAssignment36.ts, 34, 1))
+>d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20))
 >q : Symbol(d.q, Decl(typeFromPropertyAssignment36.ts, 38, 14), Decl(typeFromPropertyAssignment36.ts, 42, 14), Decl(typeFromPropertyAssignment36.ts, 45, 6))

 if (!!false) {
     d.q = false
 >d.q : Symbol(d.q, Decl(typeFromPropertyAssignment36.ts, 38, 14), Decl(typeFromPropertyAssignment36.ts, 42, 14), Decl(typeFromPropertyAssignment36.ts, 45, 6))
->d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20), Decl(typeFromPropertyAssignment36.ts, 34, 1))
+>d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20))
 >q : Symbol(d.q, Decl(typeFromPropertyAssignment36.ts, 38, 14), Decl(typeFromPropertyAssignment36.ts, 42, 14), Decl(typeFromPropertyAssignment36.ts, 45, 6))
 }
 else {
     d.q = true
 >d.q : Symbol(d.q, Decl(typeFromPropertyAssignment36.ts, 38, 14), Decl(typeFromPropertyAssignment36.ts, 42, 14), Decl(typeFromPropertyAssignment36.ts, 45, 6))
->d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20), Decl(typeFromPropertyAssignment36.ts, 34, 1))
+>d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20))
 >q : Symbol(d.q, Decl(typeFromPropertyAssignment36.ts, 38, 14), Decl(typeFromPropertyAssignment36.ts, 42, 14), Decl(typeFromPropertyAssignment36.ts, 45, 6))
 }
 d.q
 >d.q : Symbol(d.q, Decl(typeFromPropertyAssignment36.ts, 38, 14), Decl(typeFromPropertyAssignment36.ts, 42, 14), Decl(typeFromPropertyAssignment36.ts, 45, 6))
->d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20), Decl(typeFromPropertyAssignment36.ts, 34, 1))
+>d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20))
 >q : Symbol(d.q, Decl(typeFromPropertyAssignment36.ts, 38, 14), Decl(typeFromPropertyAssignment36.ts, 42, 14), Decl(typeFromPropertyAssignment36.ts, 45, 6))

 if (!!false) {
     d.r = 1
 >d.r : Symbol(d.r, Decl(typeFromPropertyAssignment36.ts, 49, 14), Decl(typeFromPropertyAssignment36.ts, 52, 6))
->d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20), Decl(typeFromPropertyAssignment36.ts, 34, 1))
+>d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20))
 >r : Symbol(d.r, Decl(typeFromPropertyAssignment36.ts, 49, 14), Decl(typeFromPropertyAssignment36.ts, 52, 6))
 }
 else {
     d.r = 2
 >d.r : Symbol(d.r, Decl(typeFromPropertyAssignment36.ts, 49, 14), Decl(typeFromPropertyAssignment36.ts, 52, 6))
->d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20), Decl(typeFromPropertyAssignment36.ts, 34, 1))
+>d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20))
 >r : Symbol(d.r, Decl(typeFromPropertyAssignment36.ts, 49, 14), Decl(typeFromPropertyAssignment36.ts, 52, 6))
 }
 d.r
 >d.r : Symbol(d.r, Decl(typeFromPropertyAssignment36.ts, 49, 14), Decl(typeFromPropertyAssignment36.ts, 52, 6))
->d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20), Decl(typeFromPropertyAssignment36.ts, 34, 1))
+>d : Symbol(d, Decl(typeFromPropertyAssignment36.ts, 31, 20))
 >r : Symbol(d.r, Decl(typeFromPropertyAssignment36.ts, 49, 14), Decl(typeFromPropertyAssignment36.ts, 52, 6))

 // test function expressions too