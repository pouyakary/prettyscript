--- old.asyncFunctionDeclaration15_es5.errors.txt
+++ new.asyncFunctionDeclaration15_es5.errors.txt
@@= skipped -0, +0 lines =@@
-asyncFunctionDeclaration15_es5.ts(6,23): error TS1055: Type '{}' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value.
+asyncFunctionDeclaration15_es5.ts(6,23): error TS1064: The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<{}>'?
 asyncFunctionDeclaration15_es5.ts(6,23): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.
-asyncFunctionDeclaration15_es5.ts(7,23): error TS1055: Type 'any' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value.
-asyncFunctionDeclaration15_es5.ts(8,23): error TS1055: Type 'number' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value.
+asyncFunctionDeclaration15_es5.ts(7,23): error TS1064: The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<any>'?
+asyncFunctionDeclaration15_es5.ts(8,23): error TS1064: The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<number>'?
 asyncFunctionDeclaration15_es5.ts(8,23): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.
-asyncFunctionDeclaration15_es5.ts(9,23): error TS1055: Type 'PromiseLike' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value.
-asyncFunctionDeclaration15_es5.ts(10,23): error TS1055: Type 'typeof Thenable' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value.
-  Construct signature return types 'Thenable' and 'PromiseLike<T>' are incompatible.
-    The types returned by 'then(...)' are incompatible between these types.
-      Type 'void' is not assignable to type 'PromiseLike<TResult1 | TResult2>'.
+asyncFunctionDeclaration15_es5.ts(9,23): error TS1064: The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<void>'?
+asyncFunctionDeclaration15_es5.ts(10,23): error TS1064: The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<void>'?
 asyncFunctionDeclaration15_es5.ts(17,16): error TS1058: The return type of an async function must either be a valid promise or must not contain a callable 'then' member.
 asyncFunctionDeclaration15_es5.ts(23,25): error TS1320: Type of 'await' operand must either be a valid promise or must not contain a callable 'then' member.

@@= skipped -19, +16 lines =@@
     async function fn1() { } // valid: Promise<void>
     async function fn2(): { } { } // error
                           ~~~
-!!! error TS1055: Type '{}' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value.
+!!! error TS1064: The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<{}>'?
                           ~~~
 !!! error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.
     async function fn3(): any { } // error
                           ~~~
-!!! error TS1055: Type 'any' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value.
+!!! error TS1064: The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<any>'?
     async function fn4(): number { } // error
                           ~~~~~~
-!!! error TS1055: Type 'number' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value.
+!!! error TS1064: The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<number>'?
                           ~~~~~~
 !!! error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.
     async function fn5(): PromiseLike<void> { } // error
                           ~~~~~~~~~~~~~~~~~
-!!! error TS1055: Type 'PromiseLike' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value.
+!!! error TS1064: The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<void>'?
     async function fn6(): Thenable { } // error
                           ~~~~~~~~
-!!! error TS1055: Type 'typeof Thenable' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value.
-!!! error TS1055:   Construct signature return types 'Thenable' and 'PromiseLike<T>' are incompatible.
-!!! error TS1055:     The types returned by 'then(...)' are incompatible between these types.
-!!! error TS1055:       Type 'void' is not assignable to type 'PromiseLike<TResult1 | TResult2>'.
+!!! error TS1064: The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<void>'?
     async function fn7() { return; } // valid: Promise<void>
     async function fn8() { return 1; } // valid: Promise<number>
     async function fn9() { return null; } // valid: Promise<any>