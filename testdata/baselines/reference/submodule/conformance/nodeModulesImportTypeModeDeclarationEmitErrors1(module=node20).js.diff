--- old.nodeModulesImportTypeModeDeclarationEmitErrors1(module=node20).js
+++ new.nodeModulesImportTypeModeDeclarationEmitErrors1(module=node20).js
@@= skipped -121, +121 lines =@@
 //// [index.d.ts]
 export type LocalInterface = import("pkg", { assert: { "resolution-mode": "foobar" } }).RequireInterface & import("pkg", { assert: { "resolution-mode": "import" } }).ImportInterface;
 export declare const a: import("pkg").RequireInterface;
-export declare const b: import("pkg", { with: { "resolution-mode": "import" } }).ImportInterface;
+export declare const b: any;
 //// [other.d.ts]
 export type LocalInterface = import("pkg", { with: {} });
-export declare const a: import("pkg", { with: {} });
-export declare const b: import("pkg", { with: {} });
+export declare const a: any;
+export declare const b: any;
 //// [other2.d.ts]
 export type LocalInterface = import("pkg", { assert: { "bad": "require" } }).RequireInterface & import("pkg", { assert: { "bad": "import" } }).ImportInterface;
 export declare const a: import("pkg").RequireInterface;
@@= skipped -17, +17 lines =@@
 export declare const b: any;
 //// [other4.d.ts]
 export type LocalInterface = import("pkg", { with: {} });
-export declare const a: import("pkg", { with: {} }), Asserts1: any, RequireInterface: any;
-export declare const b: import("pkg", { with: {} }), Asserts2: any, ImportInterface: any;
+export declare const a: any, Asserts1: any, RequireInterface: any;
+export declare const b: any, Asserts2: any, ImportInterface: any;
 //// [other5.d.ts]
 export type LocalInterface = import("pkg", { assert: {} }).RequireInterface & import("pkg", { assert: {} }).ImportInterface;
 export declare const a: import("pkg").RequireInterface;