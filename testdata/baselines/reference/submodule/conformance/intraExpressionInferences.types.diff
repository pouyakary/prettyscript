--- old.intraExpressionInferences.types
+++ new.intraExpressionInferences.types
@@= skipped -31, +31 lines =@@
 >n => n.toFixed() : (n: number) => string
 >n : number
 >n.toFixed() : string
->n.toFixed : (fractionDigits?: number) => string
+>n.toFixed : (fractionDigits?: number | undefined) => string
 >n : number
->toFixed : (fractionDigits?: number) => string
+>toFixed : (fractionDigits?: number | undefined) => string

 });

@@= skipped -22, +22 lines =@@
 >n => n.toFixed() : (n: number) => string
 >n : number
 >n.toFixed() : string
->n.toFixed : (fractionDigits?: number) => string
+>n.toFixed : (fractionDigits?: number | undefined) => string
 >n : number
->toFixed : (fractionDigits?: number) => string
+>toFixed : (fractionDigits?: number | undefined) => string

 });

@@= skipped -23, +23 lines =@@
 >n => n.toFixed() : (n: number) => string
 >n : number
 >n.toFixed() : string
->n.toFixed : (fractionDigits?: number) => string
+>n.toFixed : (fractionDigits?: number | undefined) => string
 >n : number
->toFixed : (fractionDigits?: number) => string
+>toFixed : (fractionDigits?: number | undefined) => string

 });

@@= skipped -21, +21 lines =@@
 >n => n.toFixed() : (n: number) => string
 >n : number
 >n.toFixed() : string
->n.toFixed : (fractionDigits?: number) => string
+>n.toFixed : (fractionDigits?: number | undefined) => string
 >n : number
->toFixed : (fractionDigits?: number) => string
+>toFixed : (fractionDigits?: number | undefined) => string

 callItT([_a => 0, n => n.toFixed()]);
 >callItT([_a => 0, n => n.toFixed()]) : void
@@= skipped -14, +14 lines =@@
 >n => n.toFixed() : (n: number) => string
 >n : number
 >n.toFixed() : string
->n.toFixed : (fractionDigits?: number) => string
+>n.toFixed : (fractionDigits?: number | undefined) => string
 >n : number
->toFixed : (fractionDigits?: number) => string
+>toFixed : (fractionDigits?: number | undefined) => string

 // Repro from #25092

@@= skipped -39, +39 lines =@@
 >generic => generic.toFixed() : (generic: number) => string
 >generic : number
 >generic.toFixed() : string
->generic.toFixed : (fractionDigits?: number) => string
+>generic.toFixed : (fractionDigits?: number | undefined) => string
 >generic : number
->toFixed : (fractionDigits?: number) => string
+>toFixed : (fractionDigits?: number | undefined) => string

 });

@@= skipped -545, +545 lines =@@

       arg.toString();
 >arg.toString() : string
->arg.toString : (radix?: number) => string
+>arg.toString : (radix?: number | undefined) => string
 >arg : number
->toString : (radix?: number) => string
+>toString : (radix?: number | undefined) => string

     },
   },
@@= skipped -48, +48 lines =@@
 >(arg) => arg.join(",") : (arg: number[]) => string
 >arg : number[]
 >arg.join(",") : string
->arg.join : (separator?: string) => string
+>arg.join : (separator?: string | undefined) => string
 >arg : number[]
->join : (separator?: string) => string
+>join : (separator?: string | undefined) => string
 >"," : ","

   },
@@= skipped -211, +211 lines =@@
 >(arg) => arg.join(",") : (arg: string[]) => string
 >arg : string[]
 >arg.join(",") : string
->arg.join : (separator?: string) => string
+>arg.join : (separator?: string | undefined) => string
 >arg : string[]
->join : (separator?: string) => string
+>join : (separator?: string | undefined) => string
 >"," : ","

     nested2: {
@@= skipped -73, +73 lines =@@
 >(arg) => arg.join(",") : (arg: string[]) => string
 >arg : string[]
 >arg.join(",") : string
->arg.join : (separator?: string) => string
+>arg.join : (separator?: string | undefined) => string
 >arg : string[]
->join : (separator?: string) => string
+>join : (separator?: string | undefined) => string
 >"," : ","

     c: (arg) => Number(arg),