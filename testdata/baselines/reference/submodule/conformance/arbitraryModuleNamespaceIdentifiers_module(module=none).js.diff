--- old.arbitraryModuleNamespaceIdentifiers_module(module=none).js
+++ new.arbitraryModuleNamespaceIdentifiers_module(module=none).js
@@= skipped -32, +32 lines =@@


 //// [arbitraryModuleNamespaceIdentifiers_module.js]
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports["<Z>"] = exports["<Y>"] = exports["<X>"] = void 0;
 const someValue = "someValue";
-exports["<X>"] = someValue;
-const arbitraryModuleNamespaceIdentifiers_module_1 = require("./arbitraryModuleNamespaceIdentifiers_module");
-if (arbitraryModuleNamespaceIdentifiers_module_1["<X>"] !== "someValue")
-    throw "should be someValue";
-var arbitraryModuleNamespaceIdentifiers_module_2 = require("./arbitraryModuleNamespaceIdentifiers_module");
-Object.defineProperty(exports, "<Y>", { enumerable: true, get: function () { return arbitraryModuleNamespaceIdentifiers_module_2["<X>"]; } });
-const arbitraryModuleNamespaceIdentifiers_module_3 = require("./arbitraryModuleNamespaceIdentifiers_module");
-if (arbitraryModuleNamespaceIdentifiers_module_3["<Y>"] !== "someValue")
-    throw "should be someValue";
-exports["<Z>"] = require("./arbitraryModuleNamespaceIdentifiers_module");
-const arbitraryModuleNamespaceIdentifiers_module_4 = require("./arbitraryModuleNamespaceIdentifiers_module");
-if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<X>"] !== "someValue")
-    throw "should be someValue";
-if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<Y>"] !== "someValue")
-    throw "should be someValue";
-if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<Z>"] !== arbitraryModuleNamespaceIdentifiers_module_4["<Z>"])
+export { someValue as "<X>" };
+import { "<X>" as valueX } from "./arbitraryModuleNamespaceIdentifiers_module";
+if (valueX !== "someValue")
+    throw "should be someValue";
+export { "<X>" as "<Y>" } from "./arbitraryModuleNamespaceIdentifiers_module";
+import { "<Y>" as valueY } from "./arbitraryModuleNamespaceIdentifiers_module";
+if (valueY !== "someValue")
+    throw "should be someValue";
+import * as _a from "./arbitraryModuleNamespaceIdentifiers_module";
+export { _a as "<Z>" };
+import { "<Z>" as valueZ } from "./arbitraryModuleNamespaceIdentifiers_module";
+if (valueZ["<X>"] !== "someValue")
+    throw "should be someValue";
+if (valueZ["<Y>"] !== "someValue")
+    throw "should be someValue";
+if (valueZ["<Z>"] !== valueZ)
     throw "should be export namespace";
 const importTest = "expect error about someType";
 const reimportTest = "expect error about someType";