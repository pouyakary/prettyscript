--- old.jsDeclarationsExportAssignedClassExpressionAnonymousWithSub.symbols
+++ new.jsDeclarationsExportAssignedClassExpressionAnonymousWithSub.symbols
@@= skipped -1, +1 lines =@@

 === index.js ===
 module.exports = class {
->module.exports : Symbol(module.exports, Decl(index.js, 0, 0))
->module : Symbol(export=, Decl(index.js, 0, 0))
->exports : Symbol(export=, Decl(index.js, 0, 0))
+>module.exports : Symbol((Anonymous class), Decl(index.js, 0, 16))
+>module : Symbol(module.exports)
+>exports : Symbol((Anonymous class), Decl(index.js, 0, 16))

     /**
      * @param {number} p
@@= skipped -18, +18 lines =@@
     }
 }
 module.exports.Sub = class {
->module.exports.Sub : Symbol(Sub, Decl(index.js, 7, 1))
->module.exports : Symbol(Sub, Decl(index.js, 7, 1))
->module : Symbol(module, Decl(index.js, 0, 0), Decl(index.js, 10, 27))
->exports : Symbol(module.exports, Decl(index.js, 0, 0))
->Sub : Symbol(Sub, Decl(index.js, 7, 1))
+>module.exports : Symbol((Anonymous class), Decl(index.js, 0, 16))
+>module : Symbol(module.exports)
+>exports : Symbol((Anonymous class), Decl(index.js, 0, 16))

     constructor() {
         this.instance = new module.exports(10);
 >this.instance : Symbol(Sub.instance, Decl(index.js, 9, 19))
 >this : Symbol(Sub, Decl(index.js, 8, 20))
 >instance : Symbol(Sub.instance, Decl(index.js, 9, 19))
->module.exports : Symbol(module.exports, Decl(index.js, 0, 0))
->module : Symbol(module, Decl(index.js, 0, 0), Decl(index.js, 10, 27))
->exports : Symbol(module.exports, Decl(index.js, 0, 0))
+>module.exports : Symbol((Anonymous class), Decl(index.js, 0, 16))
+>module : Symbol(module.exports)
+>exports : Symbol((Anonymous class), Decl(index.js, 0, 16))
     }
 }
