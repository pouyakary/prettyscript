--- old.typeofThis.js
+++ new.typeofThis.js
@@= skipped -145, +145 lines =@@
 }

 //// [typeofThis.js]
-"use strict";
 class Test {
+    data = {};
     constructor() {
-        this.data = {};
         var copy = {};
     }
 }
 class Test1 {
+    data = { foo: '' };
+    ['this'] = '';
     constructor() {
-        this.data = { foo: '' };
-        this['this'] = '';
         var copy = { foo: '' };
         var foo = '';
         var self = this;
@@= skipped -28, +27 lines =@@
     let x = 1;
 }
 class Test5 {
-    constructor() {
-        this.no = 1;
-        this.f = () => {
-            // should not capture this.
-            let x = 1;
-        };
-    }
+    no = 1;
+    f = () => {
+        // should not capture this.
+        let x = 1;
+    };
 }
 var Test6;
 (function (Test6) {
@@= skipped -24, +22 lines =@@
     let x = 1;
 };
 class Test9 {
-    constructor() {
-        this.no = 0;
-        this.this = 0;
-    }
+    no = 0;
+    this = 0;
     f() {
         if (this instanceof Test9D1) {
             const d1 = this;
@@= skipped -30, +28 lines =@@
     f2() { }
 }
 class Test10 {
+    a;
     foo() {
         let a = undefined;
         if (this.a) {
@@= skipped -12, +13 lines =@@
     }
 }
 class Test11 {
+    this;
     foo() {
         const o = this;
         let bar = {};