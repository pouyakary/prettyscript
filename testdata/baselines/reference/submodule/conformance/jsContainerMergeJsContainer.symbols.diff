--- old.jsContainerMergeJsContainer.symbols
+++ new.jsContainerMergeJsContainer.symbols
@@= skipped -1, +1 lines =@@

 === a.js ===
 const a = {};
->a : Symbol(a, Decl(a.js, 0, 5), Decl(a.js, 0, 13), Decl(b.js, 0, 0))
+>a : Symbol(a, Decl(a.js, 0, 5))

 a.d = function() {};
->a.d : Symbol(a.d, Decl(a.js, 0, 13), Decl(b.js, 0, 2))
->a : Symbol(a, Decl(a.js, 0, 5), Decl(a.js, 0, 13), Decl(b.js, 0, 0))
->d : Symbol(a.d, Decl(a.js, 0, 13), Decl(b.js, 0, 2))
+>a.d : Symbol(d, Decl(a.js, 0, 13))
+>a : Symbol(a, Decl(a.js, 0, 5))
+>d : Symbol(d, Decl(a.js, 0, 13))

 === b.js ===
 a.d.prototype = {};
->a.d.prototype : Symbol(a.d.prototype, Decl(b.js, 0, 0))
->a.d : Symbol(a.d, Decl(a.js, 0, 13), Decl(b.js, 0, 2))
->a : Symbol(a, Decl(a.js, 0, 5), Decl(a.js, 0, 13), Decl(b.js, 0, 0))
->d : Symbol(a.d, Decl(a.js, 0, 13), Decl(b.js, 0, 2))
->prototype : Symbol(a.d.prototype, Decl(b.js, 0, 0))
+>a.d.prototype : Symbol(Function.prototype, Decl(lib.es5.d.ts, --, --))
+>a.d : Symbol(d, Decl(a.js, 0, 13))
+>a : Symbol(a, Decl(a.js, 0, 5))
+>d : Symbol(d, Decl(a.js, 0, 13))
+>prototype : Symbol(Function.prototype, Decl(lib.es5.d.ts, --, --))
