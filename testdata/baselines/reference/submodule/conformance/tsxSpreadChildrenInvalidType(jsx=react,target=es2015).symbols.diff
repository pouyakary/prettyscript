--- old.tsxSpreadChildrenInvalidType(jsx=react,target=es2015).symbols
+++ new.tsxSpreadChildrenInvalidType(jsx=react,target=es2015).symbols
@@= skipped -39, +39 lines =@@
 >todo : Symbol(todo, Decl(tsxSpreadChildrenInvalidType.tsx, 15, 34))

     return <div>{prop.key.toString() + prop.todo}</div>;
->div : Symbol(JSX.IntrinsicElements.__index, Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))
+>div : Symbol(JSX.IntrinsicElements[__index], Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))
 >prop.key.toString : Symbol(Number.toString, Decl(lib.es5.d.ts, --, --))
 >prop.key : Symbol(key, Decl(tsxSpreadChildrenInvalidType.tsx, 15, 21))
 >prop : Symbol(prop, Decl(tsxSpreadChildrenInvalidType.tsx, 15, 14))
@@= skipped -9, +9 lines =@@
 >prop.todo : Symbol(todo, Decl(tsxSpreadChildrenInvalidType.tsx, 15, 34))
 >prop : Symbol(prop, Decl(tsxSpreadChildrenInvalidType.tsx, 15, 14))
 >todo : Symbol(todo, Decl(tsxSpreadChildrenInvalidType.tsx, 15, 34))
->div : Symbol(JSX.IntrinsicElements.__index, Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))
+>div : Symbol(JSX.IntrinsicElements[__index], Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))
 }
 function TodoList({ todos }: TodoListProps) {
 >TodoList : Symbol(TodoList, Decl(tsxSpreadChildrenInvalidType.tsx, 17, 1))
@@= skipped -8, +8 lines =@@
 >TodoListProps : Symbol(TodoListProps, Decl(tsxSpreadChildrenInvalidType.tsx, 11, 1))

     return <div>
->div : Symbol(JSX.IntrinsicElements.__index, Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))
+>div : Symbol(JSX.IntrinsicElements[__index], Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))

         {...<Todo key={todos[0].id} todo={todos[0].todo} />}
 >Todo : Symbol(Todo, Decl(tsxSpreadChildrenInvalidType.tsx, 14, 1))
@@= skipped -14, +14 lines =@@
 >todo : Symbol(TodoProp.todo, Decl(tsxSpreadChildrenInvalidType.tsx, 9, 15))

     </div>;
->div : Symbol(JSX.IntrinsicElements.__index, Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))
+>div : Symbol(JSX.IntrinsicElements[__index], Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))
 }
 function TodoListNoError({ todos }: TodoListProps) {
 >TodoListNoError : Symbol(TodoListNoError, Decl(tsxSpreadChildrenInvalidType.tsx, 22, 1))
@@= skipped -9, +9 lines =@@

     // any is not checked
     return <div>
->div : Symbol(JSX.IntrinsicElements.__index, Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))
+>div : Symbol(JSX.IntrinsicElements[__index], Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))

         {...(<Todo key={todos[0].id} todo={todos[0].todo} /> as any)}
 >Todo : Symbol(Todo, Decl(tsxSpreadChildrenInvalidType.tsx, 14, 1))
@@= skipped -14, +14 lines =@@
 >todo : Symbol(TodoProp.todo, Decl(tsxSpreadChildrenInvalidType.tsx, 9, 15))

     </div>;
->div : Symbol(JSX.IntrinsicElements.__index, Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))
+>div : Symbol(JSX.IntrinsicElements[__index], Decl(tsxSpreadChildrenInvalidType.tsx, 2, 30))
 }
 let x: TodoListProps;
 >x : Symbol(x, Decl(tsxSpreadChildrenInvalidType.tsx, 29, 3))