//// [tests/cases/conformance/salsa/typeFromPrototypeAssignment4.ts] ////

=== a.js ===
function Multimap4() {
>Multimap4 : Symbol(Multimap4, Decl(a.js, 0, 0))

  this._map = {};
};

Multimap4["prototype"] = {
>Multimap4 : Symbol(Multimap4, Decl(a.js, 0, 0))
>"prototype" : Symbol(Multimap4["prototype"], Decl(a.js, 2, 2))

  /**
   * @param {string} key
   * @returns {number} the value ok
   */
  get(key) {
>get : Symbol(get, Decl(a.js, 4, 26))
>key : Symbol(key, Decl(a.js, 9, 6))

    return this._map[key + ''];
>key : Symbol(key, Decl(a.js, 9, 6))
  }
};

Multimap4["prototype"]["add-on"] = function() {};
>Multimap4 : Symbol(Multimap4, Decl(a.js, 0, 0))
>"prototype" : Symbol(Multimap4["prototype"], Decl(a.js, 2, 2))

Multimap4["prototype"]["addon"] = function() {};
>Multimap4 : Symbol(Multimap4, Decl(a.js, 0, 0))
>"prototype" : Symbol(Multimap4["prototype"], Decl(a.js, 2, 2))

Multimap4["prototype"]["__underscores__"] = function() {};
>Multimap4 : Symbol(Multimap4, Decl(a.js, 0, 0))
>"prototype" : Symbol(Multimap4["prototype"], Decl(a.js, 2, 2))

const map4 = new Multimap4();
>map4 : Symbol(map4, Decl(a.js, 18, 5))
>Multimap4 : Symbol(Multimap4, Decl(a.js, 0, 0))

map4.get("");
>map4 : Symbol(map4, Decl(a.js, 18, 5))

map4["add-on"]();
>map4 : Symbol(map4, Decl(a.js, 18, 5))

map4.addon();
>map4 : Symbol(map4, Decl(a.js, 18, 5))

map4.__underscores__();
>map4 : Symbol(map4, Decl(a.js, 18, 5))

