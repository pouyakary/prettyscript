--- old.subtypesOfTypeParameterWithConstraints.js
+++ new.subtypesOfTypeParameterWithConstraints.js
@@= skipped -171, +171 lines =@@
 //// [subtypesOfTypeParameterWithConstraints.js]
 // checking whether other types are subtypes of type parameters with constraints
 class C3 {
+    foo;
 }
 class D1 extends C3 {
+    foo; // ok
 }
 class D2 extends C3 {
+    foo; // ok
 }
 class D3 extends C3 {
+    foo; // error
 }
 class D4 extends C3 {
+    foo; // ok
 }
 // V > U > T
 // test if T is subtype of T, U, V
 // should all work
 class D5 extends C3 {
+    foo; // ok
 }
 class D6 extends C3 {
+    foo;
 }
 class D7 extends C3 {
+    foo; // ok
 }
 // test if U is a subtype of T, U, V
 // only a subtype of V and itself
 class D8 extends C3 {
+    foo; // error
 }
 class D9 extends C3 {
+    foo; // ok
 }
 class D10 extends C3 {
+    foo; // ok
 }
 // test if V is a subtype of T, U, V
 // only a subtype of itself
 class D11 extends C3 {
+    foo; // error
 }
 class D12 extends C3 {
+    foo; // error
 }
 class D13 extends C3 {
+    foo; // ok
 }
 // Date > V > U > T
 // test if T is subtype of T, U, V, Date
 // should all work
 class D14 extends C3 {
+    foo; // ok
 }
 class D15 extends C3 {
+    foo; // ok
 }
 class D16 extends C3 {
+    foo;
 }
 class D17 extends C3 {
+    foo;
 }
 // test if U is a subtype of T, U, V, Date
 // only a subtype of V, Date and itself
 class D18 extends C3 {
+    foo; // ok
 }
 class D19 extends C3 {
+    foo; // error
 }
 class D20 extends C3 {
+    foo; // ok
 }
 class D21 extends C3 {
+    foo;
 }
 // test if V is a subtype of T, U, V, Date
 // only a subtype of itself and Date
 class D22 extends C3 {
+    foo; // ok
 }
 class D23 extends C3 {
+    foo; // error
 }
 class D24 extends C3 {
+    foo; // error
 }
 class D25 extends C3 {
+    foo; // ok
 }
 // test if Date is a subtype of T, U, V, Date
 // only a subtype of itself
 class D26 extends C3 {
+    foo; // ok
 }
 class D27 extends C3 {
+    foo; // error
 }
 class D28 extends C3 {
+    foo; // error
 }
 class D29 extends C3 {
+    foo; // error
 }