--- old.classStaticBlock7.js
+++ new.classStaticBlock7.js
@@= skipped -46, +46 lines =@@


 //// [classStaticBlock7.js]
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
 class C {
-}
-(() => {
-    yield 1;
-    yield 1;
-    return 1;
-})();
-function f1() {
-    return __awaiter(this, void 0, void 0, function* () {
-        class C {
-        }
-        (() => {
-            yield 1;
-            function ff() {
-                return __awaiter(this, void 0, void 0, function* () {
-                    yield 1;
-                });
-            }
-        })();
-    });
-}
-function* f2() {
-    class C {
-    }
-    (() => {
+    static {
+        await 1;
         yield 1;
-        function* ff() {
-            yield 1;
-        }
-    })();
-}
-function f3() {
-    class C {
-    }
-    (() => {
         return 1;
-        function ff() {
+    }
+}
+async function f1() {
+    class C {
+        static {
+            await 1;
+            async function ff() {
+                await 1;
+            }
+        }
+    }
+}
+function* f2() {
+    class C {
+        static {
+            yield 1;
+            function* ff() {
+                yield 1;
+            }
+        }
+    }
+}
+function f3() {
+    class C {
+        static {
             return 1;
+            function ff() {
+                return 1;
+            }
         }
-    })();
+    }
 }