--- old.renameStringLiteralOk.baseline.jsonc
+++ new.renameStringLiteralOk.baseline.jsonc
@@= skipped -0, +0 lines =@@
 // === findRenameLocations ===
 // === /renameStringLiteralOk.ts ===
 // interface Foo {
-//     f: '/*RENAME*/[|fooRENAME|]' | 'bar'
-// }
-// const d: 'foo' = 'foo'
-// declare const f: Foo
-// f.f = '[|fooRENAME|]'
-// f.f = `[|fooRENAME|]`
-
-
-
-// === findRenameLocations ===
-// === /renameStringLiteralOk.ts ===
-// interface Foo {
-//     f: '[|fooRENAME|]' | 'bar'
-// }
-// const d: 'foo' = 'foo'
-// declare const f: Foo
-// f.f = '/*RENAME*/[|fooRENAME|]'
-// f.f = `[|fooRENAME|]`
-
-
-
-// === findRenameLocations ===
-// === /renameStringLiteralOk.ts ===
-// interface Foo {
-//     f: '[|fooRENAME|]' | 'bar'
-// }
-// const d: 'foo' = 'foo'
-// declare const f: Foo
-// f.f = '[|fooRENAME|]'
-// f.f = `/*RENAME*/[|fooRENAME|]`
+//     f: '/*RENAME*/foo' | 'bar'
+// }
+// const d: 'foo' = 'foo'
+// declare const f: Foo
+// f.f = 'foo'
+// f.f = `foo`
+
+
+
+// === findRenameLocations ===
+// === /renameStringLiteralOk.ts ===
+// interface Foo {
+//     f: 'foo' | 'bar'
+// }
+// const d: 'foo' = 'foo'
+// declare const f: Foo
+// f.f = '/*RENAME*/foo'
+// f.f = `foo`
+
+
+
+// === findRenameLocations ===
+// === /renameStringLiteralOk.ts ===
+// --- (line: 3) skipped ---
+// const d: 'foo' = 'foo'
+// declare const f: Foo
+// f.f = 'foo'
+// f.f = `/*RENAME*/foo`