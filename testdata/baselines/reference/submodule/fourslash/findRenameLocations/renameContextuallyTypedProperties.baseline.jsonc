// === findRenameLocations ===
// === /renameContextuallyTypedProperties.ts ===
// interface I {
//     /*RENAME*/[|prop1RENAME|]: () => void;
//     prop2(): void;
// }
// 
// var o1: I = {
//     [|prop1RENAME|]() { },
//     prop2() { }
// };
// 
// var o2: I = {
//     [|prop1RENAME|]: () => { },
//     prop2: () => { }
// };
// 
// var o3: I = {
//     get [|prop1RENAME|]() { return () => { }; },
//     get prop2() { return () => { }; }
// };
// 
// var o4: I = {
//     set [|prop1RENAME|](v) { },
//     set prop2(v) { }
// };
// 
// var o5: I = {
//     "[|prop1RENAME|]"() { },
//     "prop2"() { }
// };
// 
// var o6: I = {
//     "[|prop1RENAME|]": function () { },
//     "prop2": function () { }
// };
// 
// var o7: I = {
//     ["[|prop1RENAME|]"]: function () { },
//     ["prop2"]: function () { }
// };
// 
// var o8: I = {
//     ["[|prop1RENAME|]"]() { },
//     ["prop2"]() { }
// };
// 
// var o9: I = {
//     get ["[|prop1RENAME|]"]() { return () => { }; },
//     get ["prop2"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["[|prop1RENAME|]"](v) { },
//     set ["prop2"](v) { }
// };



// === findRenameLocations ===
// === /renameContextuallyTypedProperties.ts ===
// interface I {
//     [|prop1RENAME|]: () => void;
//     prop2(): void;
// }
// 
// var o1: I = {
//     /*RENAME*/[|prop1RENAME|]() { },
//     prop2() { }
// };
// 
// var o2: I = {
//     [|prop1RENAME|]: () => { },
//     prop2: () => { }
// };
// 
// var o3: I = {
//     get [|prop1RENAME|]() { return () => { }; },
//     get prop2() { return () => { }; }
// };
// 
// var o4: I = {
//     set [|prop1RENAME|](v) { },
//     set prop2(v) { }
// };
// 
// var o5: I = {
//     "[|prop1RENAME|]"() { },
//     "prop2"() { }
// };
// 
// var o6: I = {
//     "[|prop1RENAME|]": function () { },
//     "prop2": function () { }
// };
// 
// var o7: I = {
//     ["[|prop1RENAME|]"]: function () { },
//     ["prop2"]: function () { }
// };
// 
// var o8: I = {
//     ["[|prop1RENAME|]"]() { },
//     ["prop2"]() { }
// };
// 
// var o9: I = {
//     get ["[|prop1RENAME|]"]() { return () => { }; },
//     get ["prop2"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["[|prop1RENAME|]"](v) { },
//     set ["prop2"](v) { }
// };



// === findRenameLocations ===
// === /renameContextuallyTypedProperties.ts ===
// interface I {
//     [|prop1RENAME|]: () => void;
//     prop2(): void;
// }
// 
// var o1: I = {
//     [|prop1RENAME|]() { },
//     prop2() { }
// };
// 
// var o2: I = {
//     /*RENAME*/[|prop1RENAME|]: () => { },
//     prop2: () => { }
// };
// 
// var o3: I = {
//     get [|prop1RENAME|]() { return () => { }; },
//     get prop2() { return () => { }; }
// };
// 
// var o4: I = {
//     set [|prop1RENAME|](v) { },
//     set prop2(v) { }
// };
// 
// var o5: I = {
//     "[|prop1RENAME|]"() { },
//     "prop2"() { }
// };
// 
// var o6: I = {
//     "[|prop1RENAME|]": function () { },
//     "prop2": function () { }
// };
// 
// var o7: I = {
//     ["[|prop1RENAME|]"]: function () { },
//     ["prop2"]: function () { }
// };
// 
// var o8: I = {
//     ["[|prop1RENAME|]"]() { },
//     ["prop2"]() { }
// };
// 
// var o9: I = {
//     get ["[|prop1RENAME|]"]() { return () => { }; },
//     get ["prop2"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["[|prop1RENAME|]"](v) { },
//     set ["prop2"](v) { }
// };



// === findRenameLocations ===
// === /renameContextuallyTypedProperties.ts ===
// interface I {
//     [|prop1RENAME|]: () => void;
//     prop2(): void;
// }
// 
// var o1: I = {
//     [|prop1RENAME|]() { },
//     prop2() { }
// };
// 
// var o2: I = {
//     [|prop1RENAME|]: () => { },
//     prop2: () => { }
// };
// 
// var o3: I = {
//     get /*RENAME*/[|prop1RENAME|]() { return () => { }; },
//     get prop2() { return () => { }; }
// };
// 
// var o4: I = {
//     set [|prop1RENAME|](v) { },
//     set prop2(v) { }
// };
// 
// var o5: I = {
//     "[|prop1RENAME|]"() { },
//     "prop2"() { }
// };
// 
// var o6: I = {
//     "[|prop1RENAME|]": function () { },
//     "prop2": function () { }
// };
// 
// var o7: I = {
//     ["[|prop1RENAME|]"]: function () { },
//     ["prop2"]: function () { }
// };
// 
// var o8: I = {
//     ["[|prop1RENAME|]"]() { },
//     ["prop2"]() { }
// };
// 
// var o9: I = {
//     get ["[|prop1RENAME|]"]() { return () => { }; },
//     get ["prop2"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["[|prop1RENAME|]"](v) { },
//     set ["prop2"](v) { }
// };



// === findRenameLocations ===
// === /renameContextuallyTypedProperties.ts ===
// interface I {
//     [|prop1RENAME|]: () => void;
//     prop2(): void;
// }
// 
// var o1: I = {
//     [|prop1RENAME|]() { },
//     prop2() { }
// };
// 
// var o2: I = {
//     [|prop1RENAME|]: () => { },
//     prop2: () => { }
// };
// 
// var o3: I = {
//     get [|prop1RENAME|]() { return () => { }; },
//     get prop2() { return () => { }; }
// };
// 
// var o4: I = {
//     set /*RENAME*/[|prop1RENAME|](v) { },
//     set prop2(v) { }
// };
// 
// var o5: I = {
//     "[|prop1RENAME|]"() { },
//     "prop2"() { }
// };
// 
// var o6: I = {
//     "[|prop1RENAME|]": function () { },
//     "prop2": function () { }
// };
// 
// var o7: I = {
//     ["[|prop1RENAME|]"]: function () { },
//     ["prop2"]: function () { }
// };
// 
// var o8: I = {
//     ["[|prop1RENAME|]"]() { },
//     ["prop2"]() { }
// };
// 
// var o9: I = {
//     get ["[|prop1RENAME|]"]() { return () => { }; },
//     get ["prop2"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["[|prop1RENAME|]"](v) { },
//     set ["prop2"](v) { }
// };



// === findRenameLocations ===
// === /renameContextuallyTypedProperties.ts ===
// --- (line: 23) skipped ---
// };
// 
// var o5: I = {
//     "/*RENAME*/prop1"() { },
//     "prop2"() { }
// };
// 
// // --- (line: 31) skipped ---



// === findRenameLocations ===
// === /renameContextuallyTypedProperties.ts ===
// --- (line: 28) skipped ---
// };
// 
// var o6: I = {
//     "/*RENAME*/prop1": function () { },
//     "prop2": function () { }
// };
// 
// // --- (line: 36) skipped ---



// === findRenameLocations ===
// === /renameContextuallyTypedProperties.ts ===
// --- (line: 33) skipped ---
// };
// 
// var o7: I = {
//     ["/*RENAME*/prop1"]: function () { },
//     ["prop2"]: function () { }
// };
// 
// // --- (line: 41) skipped ---



// === findRenameLocations ===
// === /renameContextuallyTypedProperties.ts ===
// --- (line: 38) skipped ---
// };
// 
// var o8: I = {
//     ["/*RENAME*/prop1"]() { },
//     ["prop2"]() { }
// };
// 
// // --- (line: 46) skipped ---



// === findRenameLocations ===
// === /renameContextuallyTypedProperties.ts ===
// --- (line: 43) skipped ---
// };
// 
// var o9: I = {
//     get ["/*RENAME*/prop1"]() { return () => { }; },
//     get ["prop2"]() { return () => { }; }
// };
// 
// // --- (line: 51) skipped ---



// === findRenameLocations ===
// === /renameContextuallyTypedProperties.ts ===
// --- (line: 48) skipped ---
// };
// 
// var o10: I = {
//     set ["/*RENAME*/prop1"](v) { },
//     set ["prop2"](v) { }
// };