// === goToDefinition ===
// === /goToDefinitionConstructorOverloads.ts ===
// class [|ConstructorOverload|] {
//     [|constructor();|]
//     constructor(foo: string);
//     constructor(foo: any)  { }
// }
// 
// var constructorOverload = new /*GOTO DEF*/ConstructorOverload();
// var constructorOverload = new ConstructorOverload("foo");
// 
// class Extended extends ConstructorOverload {
// // --- (line: 11) skipped ---



// === goToDefinition ===
// === /goToDefinitionConstructorOverloads.ts ===
// class [|ConstructorOverload|] {
//     constructor();
//     [|constructor(foo: string);|]
//     constructor(foo: any)  { }
// }
// 
// var constructorOverload = new ConstructorOverload();
// var constructorOverload = new /*GOTO DEF*/ConstructorOverload("foo");
// 
// class Extended extends ConstructorOverload {
//     readonly name = "extended";
// // --- (line: 12) skipped ---



// === goToDefinition ===
// === /goToDefinitionConstructorOverloads.ts ===
// class ConstructorOverload {
//     /*GOTO DEF*/[|constructor();|]
//     [|constructor(foo: string);|]
//     [|constructor(foo: any)  { }|]
// }
// 
// var constructorOverload = new ConstructorOverload();
// // --- (line: 8) skipped ---



// === goToDefinition ===
// === /goToDefinitionConstructorOverloads.ts ===
// class ConstructorOverload {
//     [|constructor();|]
//     constructor(foo: string);
//     constructor(foo: any)  { }
// }
// 
// var constructorOverload = new ConstructorOverload();
// var constructorOverload = new ConstructorOverload("foo");
// 
// class [|Extended|] extends ConstructorOverload {
//     readonly name = "extended";
// }
// var extended1 = new /*GOTO DEF*/Extended();
// var extended2 = new Extended("foo");



// === goToDefinition ===
// === /goToDefinitionConstructorOverloads.ts ===
// class ConstructorOverload {
//     constructor();
//     [|constructor(foo: string);|]
//     constructor(foo: any)  { }
// }
// 
// var constructorOverload = new ConstructorOverload();
// var constructorOverload = new ConstructorOverload("foo");
// 
// class [|Extended|] extends ConstructorOverload {
//     readonly name = "extended";
// }
// var extended1 = new Extended();
// var extended2 = new /*GOTO DEF*/Extended("foo");