--- old.jsEnumCrossFileExport.types
+++ new.jsEnumCrossFileExport.types
@@= skipped -1, +1 lines =@@

 === enumDef.js ===
 var Host = {};
->Host : typeof Host
->{} : {}
+>Host : { UserMetrics: { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }; }
+>{} : { UserMetrics: { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }; }

 Host.UserMetrics = {};
->Host.UserMetrics = {} : typeof Host.UserMetrics
->Host.UserMetrics : typeof Host.UserMetrics
->Host : typeof Host
->UserMetrics : typeof Host.UserMetrics
->{} : {}
+>Host.UserMetrics = {} : { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }
+>Host.UserMetrics : { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }
+>Host : { UserMetrics: { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }; }
+>UserMetrics : { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }
+>{} : { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }

 /** @enum {number} */
 Host.UserMetrics.Action = {
 >Host.UserMetrics.Action = {    WindowDocked: 1,    WindowUndocked: 2,    ScriptsBreakpointSet: 3,    TimelineStarted: 4,} : { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }
 >Host.UserMetrics.Action : { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }
->Host.UserMetrics : typeof Host.UserMetrics
->Host : typeof Host
->UserMetrics : typeof Host.UserMetrics
+>Host.UserMetrics : { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }
+>Host : { UserMetrics: { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }; }
+>UserMetrics : { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }
 >Action : { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }
 >{    WindowDocked: 1,    WindowUndocked: 2,    ScriptsBreakpointSet: 3,    TimelineStarted: 4,} : { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }

@@= skipped -45, +45 lines =@@
  */
 Host.UserMetrics.Blah = {
 >Host.UserMetrics.Blah = {    x: 12} : { x: number; }
->Host.UserMetrics.Blah : { x: number; }
->Host.UserMetrics : typeof Host.UserMetrics
->Host : typeof Host
->UserMetrics : typeof Host.UserMetrics
->Blah : { x: number; }
+>Host.UserMetrics.Blah : any
+>Host.UserMetrics : { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }
+>Host : { UserMetrics: { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }; }
+>UserMetrics : { Action: { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }; }
+>Blah : any
 >{    x: 12} : { x: number; }

     x: 12
@@= skipped -13, +13 lines =@@
 }
 === index.js ===
 var Other = {};
->Other : typeof Other
->{} : {}
+>Other : { Cls: typeof Cls; }
+>{} : { Cls: typeof Cls; }

 Other.Cls = class {
 >Other.Cls = class {    /**     * @param {!Host.UserMetrics.Action} p     */    method(p) {}    usage() {        this.method(Host.UserMetrics.Action.WindowDocked);    }} : typeof Cls
 >Other.Cls : typeof Cls
->Other : typeof Other
+>Other : { Cls: typeof Cls; }
 >Cls : typeof Cls
 >class {    /**     * @param {!Host.UserMetrics.Action} p     */    method(p) {}    usage() {        this.method(Host.UserMetrics.Action.WindowDocked);    }} : typeof Cls

@@= skipped -15, +15 lines =@@
      */
     method(p) {}
 >method : (p: Host.UserMetrics.Action) => void
->p : number
+>p : Host.UserMetrics.Action

     usage() {
 >usage : () => void
@@= skipped -10, +10 lines =@@
 >this.method : (p: Host.UserMetrics.Action) => void
 >this : this
 >method : (p: Host.UserMetrics.Action) => void
->Host.UserMetrics.Action.WindowDocked : number
->Host.UserMetrics.Action : { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }
->Host.UserMetrics : typeof Host.UserMetrics
->Host : typeof Host
->UserMetrics : typeof Host.UserMetrics
->Action : { WindowDocked: number; WindowUndocked: number; ScriptsBreakpointSet: number; TimelineStarted: number; }
->WindowDocked : number
+>Host.UserMetrics.Action.WindowDocked : any
+>Host.UserMetrics.Action : any
+>Host.UserMetrics : any
+>Host : any
+>UserMetrics : any
+>Action : any
+>WindowDocked : any
     }
 }

@@= skipped -14, +14 lines =@@
  * @type {Host.UserMetrics.Bargh}
  */
 var x = "ok";
->x : string
+>x : Host.UserMetrics.Bargh
 >"ok" : "ok"

 /**
  * @type {Host.UserMetrics.Blah}
  */
 var y = "ok";
->y : string
+>y : Host.UserMetrics.Blah
 >"ok" : "ok"
