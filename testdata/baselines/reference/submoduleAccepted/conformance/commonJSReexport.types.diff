--- old.commonJSReexport.types
+++ new.commonJSReexport.types
@@= skipped -2, +2 lines =@@
 === main.js ===
 const { hardline } = require('./second').nested;
 >hardline : { type: string; }
->require('./second').nested : typeof import("first")
->require('./second') : { nested: typeof import("first"); }
+>require('./second').nested : { hardline: { type: string; }; }
+>require('./second') : { nested: { hardline: { type: string; }; }; }
 >require : any
 >'./second' : "./second"
->nested : typeof import("first")
+>nested : { hardline: { type: string; }; }

 hardline
 >hardline : { type: string; }
@@= skipped -17, +17 lines =@@
 >"hard" : "hard"

 module.exports = {
->module.exports = {  hardline} : typeof module.exports
->module.exports : typeof module.exports
->module : { exports: typeof module.exports; }
->exports : typeof module.exports
+>module.exports = {  hardline} : { hardline: { type: string; }; }
+>module.exports : { hardline: { type: string; }; }
+>module : { "export=": { hardline: { type: string; }; }; }
+>exports : { hardline: { type: string; }; }
 >{  hardline} : { hardline: { type: string; }; }

   hardline
@@= skipped -13, +13 lines =@@

 === second.js ===
 module.exports = {
->module.exports = {  nested: require('./first')} : { nested: typeof import("first"); }
->module.exports : { nested: typeof import("first"); }
->module : { exports: { nested: typeof import("first"); }; }
->exports : { nested: typeof import("first"); }
->{  nested: require('./first')} : { nested: typeof import("first"); }
+>module.exports = {  nested: require('./first')} : { nested: { hardline: { type: string; }; }; }
+>module.exports : { nested: { hardline: { type: string; }; }; }
+>module : { "export=": { nested: { hardline: { type: string; }; }; }; }
+>exports : { nested: { hardline: { type: string; }; }; }
+>{  nested: require('./first')} : { nested: { hardline: { type: string; }; }; }

   nested: require('./first')
->nested : typeof import("first")
->require('./first') : typeof import("first")
+>nested : { hardline: { type: string; }; }
+>require('./first') : { hardline: { type: string; }; }
 >require : any
 >'./first' : "./first"
