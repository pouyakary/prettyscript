--- old.contextualTypedSpecialAssignment.types
+++ new.contextualTypedSpecialAssignment.types
@@= skipped -7, +7 lines =@@

 // property assignment
 var ns = {}
->ns : typeof ns
->{} : {}
+>ns : { x: DoneStatus; }
+>{} : { x: DoneStatus; }

 /** @type {DoneStatus} */
 ns.x = {
 >ns.x = {    status: 'done',    m(n) { }} : { status: "done"; m(n: number): void; }
 >ns.x : DoneStatus
->ns : typeof ns
+>ns : { x: DoneStatus; }
 >x : DoneStatus
 >{    status: 'done',    m(n) { }} : { status: "done"; m(n: number): void; }

@@= skipped -21, +21 lines =@@
 }

 ns.x = {
->ns.x = {    status: 'done',    m(n) { }} : { status: "done"; m(n: number): void; }
+>ns.x = {    status: 'done',    m(n) { }} : { status: string; m(n: any): void; }
 >ns.x : DoneStatus
->ns : typeof ns
+>ns : { x: DoneStatus; }
 >x : DoneStatus
->{    status: 'done',    m(n) { }} : { status: "done"; m(n: number): void; }
+>{    status: 'done',    m(n) { }} : { status: string; m(n: any): void; }

     status: 'done',
->status : "done"
+>status : string
 >'done' : "done"

     m(n) { }
->m : (n: number) => void
->n : number
+>m : (n: any) => void
+>n : any
 }
 ns.x
 >ns.x : DoneStatus
->ns : typeof ns
+>ns : { x: DoneStatus; }
 >x : DoneStatus


@@= skipped -69, +69 lines =@@
 /** @type {DoneStatus} */
 exports.x = {
 >exports.x = {    status: "done",    m(n) { }} : { status: "done"; m(n: number): void; }
->exports.x : DoneStatus
+>exports.x : { status: "done"; m(n: number): void; }
 >exports : typeof import("test")
->x : DoneStatus
+>x : { status: "done"; m(n: number): void; }
 >{    status: "done",    m(n) { }} : { status: "done"; m(n: number): void; }

     status: "done",
@@= skipped -14, +14 lines =@@
 >n : number
 }
 exports.x
->exports.x : DoneStatus
+>exports.x : { status: "done"; m(n: number): void; }
 >exports : typeof import("test")
->x : DoneStatus
+>x : { status: "done"; m(n: number): void; }

 /** @type {DoneStatus} */
 module.exports.y = {
 >module.exports.y = {    status: "done",    m(n) { }} : { status: "done"; m(n: number): void; }
->module.exports.y : DoneStatus
->module.exports : typeof module.exports
->module : { exports: typeof module.exports; }
->exports : typeof module.exports
->y : DoneStatus
+>module.exports.y : { status: "done"; m(n: number): void; }
+>module.exports : typeof import("test")
+>module : { "\"test\"": typeof import("test"); }
+>exports : typeof import("test")
+>y : { status: "done"; m(n: number): void; }
 >{    status: "done",    m(n) { }} : { status: "done"; m(n: number): void; }

     status: "done",
@@= skipped -23, +23 lines =@@
 >n : number
 }
 module.exports.y
->module.exports.y : DoneStatus
->module.exports : typeof module.exports
->module : { exports: typeof module.exports; }
->exports : typeof module.exports
->y : DoneStatus
+>module.exports.y : { status: "done"; m(n: number): void; }
+>module.exports : typeof import("test")
+>module : { "\"test\"": typeof import("test"); }
+>exports : typeof import("test")
+>y : { status: "done"; m(n: number): void; }

 // prototype-property assignment
 /** @type {DoneStatus} */
 Thing.prototype.x = {
 >Thing.prototype.x = {    status: 'done',    m(n) { }} : { status: "done"; m(n: number): void; }
->Thing.prototype.x : DoneStatus
+>Thing.prototype.x : any
 >Thing.prototype : Thing
 >Thing : typeof Thing
 >prototype : Thing
->x : DoneStatus
+>x : any
 >{    status: 'done',    m(n) { }} : { status: "done"; m(n: number): void; }

     status: 'done',
@@= skipped -26, +26 lines =@@
 >n : number
 }
 Thing.prototype.x
->Thing.prototype.x : DoneStatus
+>Thing.prototype.x : any
 >Thing.prototype : Thing
 >Thing : typeof Thing
 >prototype : Thing
->x : DoneStatus
+>x : any

 // prototype assignment
 function F() {
->F : typeof F
+>F : { (): void; prototype: DoneStatus; }
 }
 /** @type {DoneStatus} */
 F.prototype = {
 >F.prototype = {    status: "done",    m(n) { }} : { status: "done"; m(n: number): void; }
 >F.prototype : DoneStatus
->F : typeof F
+>F : { (): void; prototype: DoneStatus; }
 >prototype : DoneStatus
 >{    status: "done",    m(n) { }} : { status: "done"; m(n: number): void; }

@@= skipped -33, +33 lines =@@
 module.exports = {
 >module.exports = {    status: "done",    m(n) { }} : { status: "done"; m(n: number): void; }
 >module.exports : { status: "done"; m(n: number): void; }
->module : { exports: { status: "done"; m(n: number): void; }; }
+>module : { "export=": { status: "done"; m(n: number): void; }; }
 >exports : { status: "done"; m(n: number): void; }
 >{    status: "done",    m(n) { }} : { status: "done"; m(n: number): void; }
